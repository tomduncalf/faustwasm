{
  "version": 3,
  "sources": ["../../libfaust-wasm/libfaust-wasm.js", "../../node_modules/js-sha256/src/sha256.js", "../../src/instantiateFaustModule.ts", "../../src/FaustAudioWorkletProcessor.ts", "../../src/FaustCompiler.ts", "../../src/FaustDspInstance.ts", "../../src/FaustWasmInstantiator.ts", "../../src/FaustOfflineProcessor.ts", "../../src/FaustSvgDiagrams.ts", "../../src/LibFaust.ts", "../../src/WavEncoder.ts", "../../src/WavDecoder.ts", "../../src/FaustWebAudioDsp.ts", "../../src/FaustAudioWorkletNode.ts", "../../src/FaustScriptProcessorNode.ts", "../../src/FaustDspGenerator.ts", "../../src/bundle.ts"],
  "sourcesContent": ["\nvar FaustModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(FaustModule) {\n  FaustModule = FaustModule || {};\n\nvar Module=typeof FaustModule!=\"undefined\"?FaustModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});if(!Object.getOwnPropertyDescriptor(Module[\"ready\"],\"_main\")){Object.defineProperty(Module[\"ready\"],\"_main\",{configurable:true,get:function(){abort(\"You are getting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}});Object.defineProperty(Module[\"ready\"],\"_main\",{configurable:true,set:function(){abort(\"You are setting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}})}if(!Object.getOwnPropertyDescriptor(Module[\"ready\"],\"___getTypeName\")){Object.defineProperty(Module[\"ready\"],\"___getTypeName\",{configurable:true,get:function(){abort(\"You are getting ___getTypeName on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}});Object.defineProperty(Module[\"ready\"],\"___getTypeName\",{configurable:true,set:function(){abort(\"You are setting ___getTypeName on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}})}if(!Object.getOwnPropertyDescriptor(Module[\"ready\"],\"___embind_register_native_and_builtin_types\")){Object.defineProperty(Module[\"ready\"],\"___embind_register_native_and_builtin_types\",{configurable:true,get:function(){abort(\"You are getting ___embind_register_native_and_builtin_types on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}});Object.defineProperty(Module[\"ready\"],\"___embind_register_native_and_builtin_types\",{configurable:true,set:function(){abort(\"You are setting ___embind_register_native_and_builtin_types on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}})}if(!Object.getOwnPropertyDescriptor(Module[\"ready\"],\"___stdio_exit\")){Object.defineProperty(Module[\"ready\"],\"___stdio_exit\",{configurable:true,get:function(){abort(\"You are getting ___stdio_exit on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}});Object.defineProperty(Module[\"ready\"],\"___stdio_exit\",{configurable:true,set:function(){abort(\"You are setting ___stdio_exit on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}})}if(!Object.getOwnPropertyDescriptor(Module[\"ready\"],\"onRuntimeInitialized\")){Object.defineProperty(Module[\"ready\"],\"onRuntimeInitialized\",{configurable:true,get:function(){abort(\"You are getting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}});Object.defineProperty(Module[\"ready\"],\"onRuntimeInitialized\",{configurable:true,set:function(){abort(\"You are setting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")}})}if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){if(Module[\"ENVIRONMENT_IS_PTHREAD\"])return;var loadPackage=function(metadata){var PACKAGE_PATH=\"\";if(typeof window===\"object\"){PACKAGE_PATH=window[\"encodeURIComponent\"](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf(\"/\"))+\"/\")}else if(typeof process===\"undefined\"&&typeof location!==\"undefined\"){PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf(\"/\"))+\"/\")}var PACKAGE_NAME=\"libfaust-wasm.data\";var REMOTE_PACKAGE_BASE=\"libfaust-wasm.data\";if(typeof Module[\"locateFilePackage\"]===\"function\"&&!Module[\"locateFile\"]){Module[\"locateFile\"]=Module[\"locateFilePackage\"];err(\"warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)\")}var REMOTE_PACKAGE_NAME=Module[\"locateFile\"]?Module[\"locateFile\"](REMOTE_PACKAGE_BASE,\"\"):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata[\"remote_package_size\"];var PACKAGE_UUID=metadata[\"package_uuid\"];function fetchRemotePackage(packageName,packageSize,callback,errback){if(typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\"){require(\"fs\").readFile(packageName,function(err,contents){if(err){errback(err)}else{callback(contents.buffer)}});return}var xhr=new XMLHttpRequest;xhr.open(\"GET\",packageName,true);xhr.responseType=\"arraybuffer\";xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size}}else{Module.dataFileDownloads[url].loaded=event.loaded}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module[\"setStatus\"])Module[\"setStatus\"](\"Downloading data... (\"+loaded+\"/\"+total+\")\")}else if(!Module.dataFileDownloads){if(Module[\"setStatus\"])Module[\"setStatus\"](\"Downloading data...\")}};xhr.onerror=function(event){throw new Error(\"NetworkError for: \"+packageName)};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){var packageData=xhr.response;callback(packageData)}else{throw new Error(xhr.statusText+\" : \"+xhr.responseURL)}};xhr.send(null)}function handleError(error){console.error(\"package error:\",error)}var fetchedCallback=null;var fetched=Module[\"getPreloadedPackage\"]?Module[\"getPreloadedPackage\"](REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE):null;if(!fetched)fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(data){if(fetchedCallback){fetchedCallback(data);fetchedCallback=null}else{fetched=data}},handleError);function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module[\"FS_createPath\"](\"/\",\"usr\",true,true);Module[\"FS_createPath\"](\"/usr\",\"rsrc\",true,true);Module[\"FS_createPath\"](\"/usr\",\"share\",true,true);Module[\"FS_createPath\"](\"/usr/share\",\"faust\",true,true);function DataRequest(start,end,audio){this.start=start;this.end=end;this.audio=audio}DataRequest.prototype={requests:{},open:function(mode,name){this.name=name;this.requests[name]=this;Module[\"addRunDependency\"](\"fp \"+this.name)},send:function(){},onload:function(){var byteArray=this.byteArray.subarray(this.start,this.end);this.finish(byteArray)},finish:function(byteArray){var that=this;Module[\"FS_createDataFile\"](this.name,null,byteArray,true,true,true);Module[\"removeRunDependency\"](\"fp \"+that.name);this.requests[this.name]=null}};var files=metadata[\"files\"];for(var i=0;i<files.length;++i){new DataRequest(files[i][\"start\"],files[i][\"end\"],files[i][\"audio\"]||0).open(\"GET\",files[i][\"filename\"])}function processPackageData(arrayBuffer){assert(arrayBuffer,\"Loading data file failed.\");assert(arrayBuffer instanceof ArrayBuffer,\"bad input to processPackageData\");var byteArray=new Uint8Array(arrayBuffer);DataRequest.prototype.byteArray=byteArray;var files=metadata[\"files\"];for(var i=0;i<files.length;++i){DataRequest.prototype.requests[files[i].filename].onload()}Module[\"removeRunDependency\"](\"datafile_libfaust-wasm.data\")}Module[\"addRunDependency\"](\"datafile_libfaust-wasm.data\");if(!Module.preloadResults)Module.preloadResults={};Module.preloadResults[PACKAGE_NAME]={fromCache:false};if(fetched){processPackageData(fetched);fetched=null}else{fetchedCallback=processPackageData}}if(Module[\"calledRun\"]){runWithFS()}else{if(!Module[\"preRun\"])Module[\"preRun\"]=[];Module[\"preRun\"].push(runWithFS)}};loadPackage({\"files\":[{\"filename\":\"/usr/rsrc/mixer64.wasm\",\"start\":0,\"end\":399},{\"filename\":\"/usr/rsrc/mixer32.wasm\",\"start\":399,\"end\":786},{\"filename\":\"/usr/share/faust/hoa.lib\",\"start\":786,\"end\":13797},{\"filename\":\"/usr/share/faust/compressors.lib\",\"start\":13797,\"end\":58859},{\"filename\":\"/usr/share/faust/basics.lib\",\"start\":58859,\"end\":107151},{\"filename\":\"/usr/share/faust/dx7.lib\",\"start\":107151,\"end\":176160},{\"filename\":\"/usr/share/faust/analyzers.lib\",\"start\":176160,\"end\":208952},{\"filename\":\"/usr/share/faust/spats.lib\",\"start\":208952,\"end\":214031},{\"filename\":\"/usr/share/faust/envelopes.lib\",\"start\":214031,\"end\":224548},{\"filename\":\"/usr/share/faust/oscillators.lib\",\"start\":224548,\"end\":270689},{\"filename\":\"/usr/share/faust/mi.lib\",\"start\":270689,\"end\":287856},{\"filename\":\"/usr/share/faust/misceffects.lib\",\"start\":287856,\"end\":309493},{\"filename\":\"/usr/share/faust/version.lib\",\"start\":309493,\"end\":310260},{\"filename\":\"/usr/share/faust/webaudio.lib\",\"start\":310260,\"end\":322262},{\"filename\":\"/usr/share/faust/math.lib\",\"start\":322262,\"end\":343740},{\"filename\":\"/usr/share/faust/stdfaust.lib\",\"start\":343740,\"end\":344984},{\"filename\":\"/usr/share/faust/filter.lib\",\"start\":344984,\"end\":410370},{\"filename\":\"/usr/share/faust/delays.lib\",\"start\":410370,\"end\":424750},{\"filename\":\"/usr/share/faust/routes.lib\",\"start\":424750,\"end\":431279},{\"filename\":\"/usr/share/faust/soundfiles.lib\",\"start\":431279,\"end\":440473},{\"filename\":\"/usr/share/faust/tonestacks.lib\",\"start\":440473,\"end\":452821},{\"filename\":\"/usr/share/faust/wdmodels.lib\",\"start\":452821,\"end\":518247},{\"filename\":\"/usr/share/faust/all.lib\",\"start\":518247,\"end\":519244},{\"filename\":\"/usr/share/faust/music.lib\",\"start\":519244,\"end\":537678},{\"filename\":\"/usr/share/faust/tubes.lib\",\"start\":537678,\"end\":887463},{\"filename\":\"/usr/share/faust/effect.lib\",\"start\":887463,\"end\":956493},{\"filename\":\"/usr/share/faust/vaeffects.lib\",\"start\":956493,\"end\":991851},{\"filename\":\"/usr/share/faust/maxmsp.lib\",\"start\":991851,\"end\":999570},{\"filename\":\"/usr/share/faust/platform.lib\",\"start\":999570,\"end\":1002293},{\"filename\":\"/usr/share/faust/synths.lib\",\"start\":1002293,\"end\":1009640},{\"filename\":\"/usr/share/faust/sf.lib\",\"start\":1009640,\"end\":1010706},{\"filename\":\"/usr/share/faust/fds.lib\",\"start\":1010706,\"end\":1031158},{\"filename\":\"/usr/share/faust/reducemaps.lib\",\"start\":1031158,\"end\":1035890},{\"filename\":\"/usr/share/faust/phaflangers.lib\",\"start\":1035890,\"end\":1045759},{\"filename\":\"/usr/share/faust/filters.lib\",\"start\":1045759,\"end\":1149656},{\"filename\":\"/usr/share/faust/signals.lib\",\"start\":1149656,\"end\":1160674},{\"filename\":\"/usr/share/faust/instruments.lib\",\"start\":1160674,\"end\":1170068},{\"filename\":\"/usr/share/faust/quantizers.lib\",\"start\":1170068,\"end\":1180062},{\"filename\":\"/usr/share/faust/noises.lib\",\"start\":1180062,\"end\":1190340},{\"filename\":\"/usr/share/faust/oscillator.lib\",\"start\":1190340,\"end\":1210191},{\"filename\":\"/usr/share/faust/interpolators.lib\",\"start\":1210191,\"end\":1226090},{\"filename\":\"/usr/share/faust/demos.lib\",\"start\":1226090,\"end\":1280418},{\"filename\":\"/usr/share/faust/reverbs.lib\",\"start\":1280418,\"end\":1298654},{\"filename\":\"/usr/share/faust/physmodels.lib\",\"start\":1298654,\"end\":1469462},{\"filename\":\"/usr/share/faust/maths.lib\",\"start\":1469462,\"end\":1489885}],\"remote_package_size\":1489885,\"package_uuid\":\"d5df6273-7f72-4baf-889a-3f342be3a930\"})})();if(Module[\"ENVIRONMENT_IS_PTHREAD\"])Module[\"preRun\"]=[];var necessaryPreJSTasks=Module[\"preRun\"].slice();if(!Module[\"preRun\"])throw\"Module.preRun should exist because file support used it; did a pre-js delete it?\";necessaryPreJSTasks.forEach(function(task){if(Module[\"preRun\"].indexOf(task)<0)throw\"All preRun tasks that exist before user pre-js code should remain after; did you replace Module or modify Module.preRun?\"});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(Module[\"ENVIRONMENT\"]){throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)\")}var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;if(e&&typeof e==\"object\"&&e.stack){toLog=[e,e.stack]}err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(!(typeof process==\"object\"&&typeof require==\"function\"))throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof process==\"object\"&&typeof require===\"function\"||typeof window==\"object\"||typeof importScripts==\"function\")throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){let data;if(typeof readbuffer==\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data==\"object\");return data};readAsync=function readAsync(f,onload,onerror){setTimeout(()=>onload(readBinary(f)),0)};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit==\"function\"){quit_=((status,toThrow)=>{logExceptionOnExit(toThrow);quit(status)})}if(typeof print!=\"undefined\"){if(typeof console==\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!=\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(!(typeof window==\"object\"||typeof importScripts==\"function\"))throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{throw new Error(\"environment detection error\")}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;checkIncomingModuleAPI();if(Module[\"arguments\"])arguments_=Module[\"arguments\"];legacyModuleProp(\"arguments\",\"arguments_\");if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];legacyModuleProp(\"thisProgram\",\"thisProgram\");if(Module[\"quit\"])quit_=Module[\"quit\"];legacyModuleProp(\"quit\",\"quit_\");assert(typeof Module[\"memoryInitializerPrefixURL\"]==\"undefined\",\"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"pthreadMainPrefixURL\"]==\"undefined\",\"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"cdInitializerPrefixURL\"]==\"undefined\",\"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"filePackagePrefixURL\"]==\"undefined\",\"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"read\"]==\"undefined\",\"Module.read option was removed (modify read_ in JS)\");assert(typeof Module[\"readAsync\"]==\"undefined\",\"Module.readAsync option was removed (modify readAsync in JS)\");assert(typeof Module[\"readBinary\"]==\"undefined\",\"Module.readBinary option was removed (modify readBinary in JS)\");assert(typeof Module[\"setWindowTitle\"]==\"undefined\",\"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");assert(typeof Module[\"TOTAL_MEMORY\"]==\"undefined\",\"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");legacyModuleProp(\"read\",\"read_\");legacyModuleProp(\"readAsync\",\"readAsync\");legacyModuleProp(\"readBinary\",\"readBinary\");legacyModuleProp(\"setWindowTitle\",\"setWindowTitle\");assert(!ENVIRONMENT_IS_SHELL,\"shell environment detected but not enabled at build time.  Add 'shell' to `-s ENVIRONMENT` to enable.\");var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function==\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}function legacyModuleProp(prop,newName){if(!Object.getOwnPropertyDescriptor(Module,prop)){Object.defineProperty(Module,prop,{configurable:true,get:function(){abort(\"Module.\"+prop+\" has been replaced with plain \"+newName+\" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\")}})}}function ignoredModuleProp(prop){if(Object.getOwnPropertyDescriptor(Module,prop)){abort(\"`Module.\"+prop+\"` was supplied but `\"+prop+\"` not included in INCOMING_MODULE_JS_API\")}}function unexportedMessage(sym,isFSSybol){var msg=\"'\"+sym+\"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";if(isFSSybol){msg+=\". Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\"}return msg}function unexportedRuntimeSymbol(sym,isFSSybol){if(!Object.getOwnPropertyDescriptor(Module,sym)){Object.defineProperty(Module,sym,{configurable:true,get:function(){abort(unexportedMessage(sym,isFSSybol))}})}}function unexportedRuntimeFunction(sym,isFSSybol){if(!Object.getOwnPropertyDescriptor(Module,sym)){Module[sym]=(()=>abort(unexportedMessage(sym,isFSSybol)))}}var tempRet0=0;var setTempRet0=value=>{tempRet0=value};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];legacyModuleProp(\"wasmBinary\",\"wasmBinary\");var noExitRuntime=Module[\"noExitRuntime\"]||true;legacyModuleProp(\"noExitRuntime\",\"noExitRuntime\");if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed\"+(text?\": \"+text:\"\"))}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;assert(returnType!==\"array\",'Return type should not be \"array\".');if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;function allocate(slab,allocator){var ret;assert(typeof allocator==\"number\",\"allocate no longer takes a type argument\");assert(typeof slab!=\"number\",\"allocate no longer takes a number as arg0\");if(allocator==ALLOC_STACK){ret=stackAlloc(slab.length)}else{ret=_malloc(slab.length)}if(!slab.subarray&&!slab.slice){slab=new Uint8Array(slab)}HEAPU8.set(slab,ret);return ret}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{if((u0&248)!=240)warnOnce(\"Invalid UTF-8 leading byte 0x\"+u0.toString(16)+\" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;if(u>1114111)warnOnce(\"Invalid Unicode code point 0x\"+u.toString(16)+\" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite==\"number\",\"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){assert(ptr%2==0,\"Pointer passed to UTF16ToString must be aligned to two bytes!\");var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){assert(outPtr%2==0,\"Pointer passed to stringToUTF16 must be aligned to two bytes!\");assert(typeof maxBytesToWrite==\"number\",\"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){assert(ptr%4==0,\"Pointer passed to UTF32ToString must be aligned to four bytes!\");var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){assert(outPtr%4==0,\"Pointer passed to stringToUTF32 must be aligned to four bytes!\");assert(typeof maxBytesToWrite==\"number\",\"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){assert(array.length>=0,\"writeArrayToMemory array must have a length (should be an array or typed array)\");HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===(str.charCodeAt(i)&255));HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var TOTAL_STACK=5242880;if(Module[\"TOTAL_STACK\"])assert(TOTAL_STACK===Module[\"TOTAL_STACK\"],\"the stack size can no longer be determined at runtime\");var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;legacyModuleProp(\"INITIAL_MEMORY\",\"INITIAL_MEMORY\");assert(INITIAL_MEMORY>=TOTAL_STACK,\"INITIAL_MEMORY should be larger than TOTAL_STACK, was \"+INITIAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");assert(typeof Int32Array!=\"undefined\"&&typeof Float64Array!==\"undefined\"&&Int32Array.prototype.subarray!=undefined&&Int32Array.prototype.set!=undefined,\"JS engine does not provide full typed array support\");assert(!Module[\"wasmMemory\"],\"Use of `wasmMemory` detected.  Use -s IMPORTED_MEMORY to define wasmMemory externally\");assert(INITIAL_MEMORY==16777216,\"Detected runtime INITIAL_MEMORY setting.  Use -s IMPORTED_MEMORY to define wasmMemory dynamically\");var wasmTable;function writeStackCookie(){var max=_emscripten_stack_get_end();assert((max&3)==0);HEAP32[max>>2]=34821223;HEAP32[max+4>>2]=2310721022;HEAP32[0]=1668509029}function checkStackCookie(){if(ABORT)return;var max=_emscripten_stack_get_end();var cookie1=HEAPU32[max>>2];var cookie2=HEAPU32[max+4>>2];if(cookie1!=34821223||cookie2!=2310721022){abort(\"Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x\"+cookie2.toString(16)+\" 0x\"+cookie1.toString(16))}if(HEAP32[0]!==1668509029)abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\")}(function(){var h16=new Int16Array(1);var h8=new Int8Array(h16.buffer);h16[0]=25459;if(h8[0]!==115||h8[1]!==99)throw\"Runtime error: expected the system to be little-endian! (Run with -s SUPPORT_BIG_ENDIAN=1 to bypass)\"})();var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){checkStackCookie();assert(!runtimeInitialized);runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();SOCKFS.root=FS.mount(SOCKFS,{},null);callRuntimeCallbacks(__ATINIT__)}function postRun(){checkStackCookie();if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}assert(Math.imul,\"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.fround,\"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.clz32,\"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.trunc,\"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random()}}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!=\"undefined\"){runDependencyWatcher=setInterval(function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err(\"still waiting on run dependencies:\")}err(\"dependency: \"+dep)}if(shown){err(\"(end of list)\")}},1e4)}}else{err(\"warning: run dependency added without ID\")}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err(\"warning: run dependency removed without ID\")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}function createExportWrapper(name,fixedasm){return function(){var displayName=name;var asm=fixedasm;if(!fixedasm){asm=Module[\"asm\"]}assert(runtimeInitialized,\"native function `\"+displayName+\"` called before runtime initialization\");if(!asm[name]){assert(asm[name],\"exported native function `\"+displayName+\"` not found\")}return asm[name].apply(null,arguments)}}var wasmBinaryFile;wasmBinaryFile=\"libfaust-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];assert(wasmMemory,\"memory not found in wasm exports\");updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];assert(wasmTable,\"table not found in wasm exports\");addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");var trueModule=Module;function receiveInstantiationResult(result){assert(Module===trueModule,\"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");trueModule=null;receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);if(isFileURI(wasmBinaryFile)){err(\"warning: Loading from a file URI (\"+wasmBinaryFile+\") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\")}abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={131184:function($0){var dsp_code=\"\";try{var xmlhttp=new XMLHttpRequest;xmlhttp.open(\"GET\",Module.UTF8ToString($0),false);xmlhttp.send();if(xmlhttp.status==200){dsp_code=xmlhttp.responseText}}catch(e){console.log(e)}return allocate(intArrayFromString(dsp_code),\"i8\",ALLOC_STACK)}};function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func==\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){warnOnce(\"warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling\");return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}assert(wasmTable.get(funcPtr)==func,\"JavaScript-side Wasm function table mirror is out of date!\");return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;assert(prev>0);return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s NO_DISABLE_EXCEPTION_CATCHING or -s EXCEPTION_CATCHING_ALLOWED=[..] to catch.\"}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");return function(){return crypto_module[\"randomBytes\"](1)[0]}}catch(e){}}return function(){abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\")}}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc(BUFSIZE);var bytesRead=0;try{bytesRead=fs.readSync(process.stdin.fd,buf,0,BUFSIZE,-1)}catch(e){if(e.toString().includes(\"EOF\"))bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){abort(\"internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported\")}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){assert(!(buffer instanceof ArrayBuffer));if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){assert(position===0,\"canOwn must imply no weird position inside the file\");node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,address,length,position,prot,flags){if(address!==0){throw new FS.ErrnoError(28)}if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var ERRNO_MESSAGES={0:\"Success\",1:\"Arg list too long\",2:\"Permission denied\",3:\"Address already in use\",4:\"Address not available\",5:\"Address family not supported by protocol family\",6:\"No more processes\",7:\"Socket already connected\",8:\"Bad file number\",9:\"Trying to read unreadable message\",10:\"Mount device busy\",11:\"Operation canceled\",12:\"No children\",13:\"Connection aborted\",14:\"Connection refused\",15:\"Connection reset by peer\",16:\"File locking deadlock error\",17:\"Destination address required\",18:\"Math arg out of domain of func\",19:\"Quota exceeded\",20:\"File exists\",21:\"Bad address\",22:\"File too large\",23:\"Host is unreachable\",24:\"Identifier removed\",25:\"Illegal byte sequence\",26:\"Connection already in progress\",27:\"Interrupted system call\",28:\"Invalid argument\",29:\"I/O error\",30:\"Socket is already connected\",31:\"Is a directory\",32:\"Too many symbolic links\",33:\"Too many open files\",34:\"Too many links\",35:\"Message too long\",36:\"Multihop attempted\",37:\"File or path name too long\",38:\"Network interface is not configured\",39:\"Connection reset by network\",40:\"Network is unreachable\",41:\"Too many open files in system\",42:\"No buffer space available\",43:\"No such device\",44:\"No such file or directory\",45:\"Exec format error\",46:\"No record locks available\",47:\"The link has been severed\",48:\"Not enough core\",49:\"No message of desired type\",50:\"Protocol not available\",51:\"No space left on device\",52:\"Function not implemented\",53:\"Socket is not connected\",54:\"Not a directory\",55:\"Directory not empty\",56:\"State not recoverable\",57:\"Socket operation on non-socket\",59:\"Not a typewriter\",60:\"No such device or address\",61:\"Value too large for defined data type\",62:\"Previous owner died\",63:\"Not super-user\",64:\"Broken pipe\",65:\"Protocol error\",66:\"Unknown protocol\",67:\"Protocol wrong type for socket\",68:\"Math result not representable\",69:\"Read only file system\",70:\"Illegal seek\",71:\"No such process\",72:\"Stale file handle\",73:\"Connection timed out\",74:\"Text file busy\",75:\"Cross-device link\",100:\"Device not a stream\",101:\"Bad font file fmt\",102:\"Invalid slot\",103:\"Invalid request code\",104:\"No anode\",105:\"Block device required\",106:\"Channel number out of range\",107:\"Level 3 halted\",108:\"Level 3 reset\",109:\"Link number out of range\",110:\"Protocol driver not attached\",111:\"No CSI structure available\",112:\"Level 2 halted\",113:\"Invalid exchange\",114:\"Invalid request descriptor\",115:\"Exchange full\",116:\"No data (for no delay io)\",117:\"Timer expired\",118:\"Out of streams resources\",119:\"Machine is not on the network\",120:\"Package not installed\",121:\"The object is remote\",122:\"Advertise error\",123:\"Srmount error\",124:\"Communication error on send\",125:\"Cross mount point (not really error)\",126:\"Given log. name not unique\",127:\"f.d. invalid for this operation\",128:\"Remote address changed\",129:\"Can   access a needed shared lib\",130:\"Accessing a corrupted shared lib\",131:\".lib section in a.out corrupted\",132:\"Attempting to link in too many libs\",133:\"Attempting to exec a shared library\",135:\"Streams pipe error\",136:\"Too many users\",137:\"Socket type not supported\",138:\"Not supported\",139:\"Protocol family not supported\",140:\"Can't send after socket shutdown\",141:\"Too many references\",142:\"Host is down\",148:\"No medium (in tape drive)\",156:\"Level 2 not synchronized\"};var ERRNO_CODES={};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{path=PATH_FS.resolve(FS.cwd(),path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:node=>{var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:(parentid,name)=>{var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{assert(typeof parent==\"object\");var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>{return node===node.parent},isMountpoint:node=>{return!!node.mounted},isFile:mode=>{return(mode&61440)===32768},isDir:mode=>{return(mode&61440)===16384},isLink:mode=>{return(mode&61440)===40960},isChrdev:mode=>{return(mode&61440)===8192},isBlkdev:mode=>{return(mode&61440)===24576},isFIFO:mode=>{return(mode&61440)===4096},isSocket:mode=>{return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:str=>{var flags=FS.flagModes[str];if(typeof flags==\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:flag=>{var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:(node,perms)=>{if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:dir=>{var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:(dir,name)=>{try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:(node,flags)=>{if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:(fd_start=0,fd_end=FS.MAX_OPEN_FDS)=>{for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:fd=>FS.streams[fd],createStream:(stream,fd_start,fd_end)=>{if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}stream=Object.assign(new FS.FSStream,stream);var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{if(typeof populate==\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{if(typeof type==\"string\"){throw type}var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:mountpoint=>{var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)},lookup:(parent,name)=>{return parent.node_ops.lookup(parent,name)},mknod:(path,mode,dev)=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:(path,mode)=>{mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:(path,mode)=>{mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:(path,mode)=>{var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:(path,mode,dev)=>{if(typeof dev==\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:path=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:path=>{var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:(path,dontFollow)=>{var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:path=>{return FS.stat(path,true)},chmod:(path,mode,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,true)},fchmod:(fd,mode)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:(path,uid,gid,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,true)},fchown:(fd,uid,gid)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:(path,len)=>{if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:(path,atime,mtime)=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode,fd_start,fd_end)=>{if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags==\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode==\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:stream=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>{return stream.fd===null},llseek:(stream,offset,whence)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:(stream,offset,length)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,address,length,position,prot,flags)=>{if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,address,length,position,prot,flags)},msync:(stream,buffer,offset,length,mmapFlags)=>{if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:(path,opts={})=>{opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:()=>FS.currentPath,chdir:path=>{var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:()=>{FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:()=>{FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:()=>{FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:()=>{var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:(parent,name)=>{var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:()=>{if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1);assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")},ensureErrnoError:()=>{if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}};this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack){Object.defineProperty(this,\"stack\",{value:(new Error).stack,writable:true});this.stack=demangleAll(this.stack)}};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:()=>{FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:(input,output,error)=>{assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:()=>{FS.init.initialized=false;___stdio_exit();for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:(path,dontResolveLastLink)=>{var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:(path,dontResolveLastLink)=>{try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent=typeof parent==\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:(parent,name,properties,canRead,canWrite)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name;if(parent){parent=typeof parent==\"string\"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:(parent,name,input,output)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:stream=>{stream.seekable=false},close:stream=>{if(output&&output.buffer&&output.buffer.length){output(10)}},read:(stream,buffer,offset,length,pos)=>{var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});stream_ops.read=((stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size});node.stream_ops=stream_ops;return node},createPreloadedFile:(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(Browser.handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}},indexedDB:()=>{return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:()=>{return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=(()=>{out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)});openRequest.onsuccess=(()=>{var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=(()=>{ok++;if(ok+fail==total)finish()});putRequest.onerror=(()=>{fail++;if(ok+fail==total)finish()})});transaction.onerror=onerror});openRequest.onerror=onerror},loadFilesFromDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=(()=>{var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var getRequest=files.get(path);getRequest.onsuccess=(()=>{if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()});getRequest.onerror=(()=>{fail++;if(ok+fail==total)finish()})});transaction.onerror=onerror});openRequest.onerror=onerror},absolutePath:()=>{abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\")},createFolder:()=>{abort(\"FS.createFolder has been removed; use FS.mkdir instead\")},createLink:()=>{abort(\"FS.createLink has been removed; use FS.symlink instead\")},joinPath:()=>{abort(\"FS.joinPath has been removed; use PATH.join instead\")},mmapAlloc:()=>{abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\")},standardizePath:()=>{abort(\"FS.standardizePath has been removed; use PATH.normalize instead\")}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(path[0]===\"/\"){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node){return-44}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){assert(SYSCALLS.varargs!=undefined);SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){if(low>=0)assert(high===0);else assert(high===-1);return low}};function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){try{assert(nfds<=64,\"nfds must be less than or equal to 64\");assert(!exceptfds,\"exceptfds not supported\");var total=0;var srcReadLow=readfds?HEAP32[readfds>>2]:0,srcReadHigh=readfds?HEAP32[readfds+4>>2]:0;var srcWriteLow=writefds?HEAP32[writefds>>2]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>2]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>2]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>2]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>2]:0)|(writefds?HEAP32[writefds>>2]:0)|(exceptfds?HEAP32[exceptfds>>2]:0);var allHigh=(readfds?HEAP32[readfds+4>>2]:0)|(writefds?HEAP32[writefds+4>>2]:0)|(exceptfds?HEAP32[exceptfds+4>>2]:0);var check=function(fd,low,high,val){return fd<32?low&val:high&val};for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){flags=stream.stream_ops.poll(stream)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>2]=dstReadLow;HEAP32[readfds+4>>2]=dstReadHigh}if(writefds){HEAP32[writefds>>2]=dstWriteLow;HEAP32[writefds+4>>2]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>2]=dstExceptLow;HEAP32[exceptfds+4>>2]=dstExceptHigh}return total}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_chdir(path){try{path=SYSCALLS.getStr(path);FS.chdir(path);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}var SOCKFS={mount:function(mount){Module[\"websocket\"]=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"]?Module[\"websocket\"]:{};Module[\"websocket\"]._callbacks={};Module[\"websocket\"][\"on\"]=function(event,callback){if(\"function\"===typeof callback){this._callbacks[event]=callback}return this};Module[\"websocket\"].emit=function(event,param){if(\"function\"===typeof this._callbacks[event]){this._callbacks[event].call(this,param)}};return FS.createNode(null,\"/\",16384|511,0)},createSocket:function(family,type,protocol){type&=~526336;var streaming=type==1;if(streaming&&protocol&&protocol!=6){throw new FS.ErrnoError(66)}var sock={family:family,type:type,protocol:protocol,server:null,error:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};var name=SOCKFS.nextname();var node=FS.createNode(SOCKFS.root,name,49152,0);node.sock=sock;var stream=FS.createStream({path:name,node:node,flags:2,seekable:false,stream_ops:SOCKFS.stream_ops});sock.stream=stream;return sock},getSocket:function(fd){var stream=FS.getStream(fd);if(!stream||!FS.isSocket(stream.node.mode)){return null}return stream.node.sock},stream_ops:{poll:function(stream){var sock=stream.node.sock;return sock.sock_ops.poll(sock)},ioctl:function(stream,request,varargs){var sock=stream.node.sock;return sock.sock_ops.ioctl(sock,request,varargs)},read:function(stream,buffer,offset,length,position){var sock=stream.node.sock;var msg=sock.sock_ops.recvmsg(sock,length);if(!msg){return 0}buffer.set(msg.buffer,offset);return msg.buffer.length},write:function(stream,buffer,offset,length,position){var sock=stream.node.sock;return sock.sock_ops.sendmsg(sock,buffer,offset,length)},close:function(stream){var sock=stream.node.sock;sock.sock_ops.close(sock)}},nextname:function(){if(!SOCKFS.nextname.current){SOCKFS.nextname.current=0}return\"socket[\"+SOCKFS.nextname.current+++\"]\"},websocket_sock_ops:{createPeer:function(sock,addr,port){var ws;if(typeof addr==\"object\"){ws=addr;addr=null;port=null}if(ws){if(ws._socket){addr=ws._socket.remoteAddress;port=ws._socket.remotePort}else{var result=/ws[s]?:\\/\\/([^:]+):(\\d+)/.exec(ws.url);if(!result){throw new Error(\"WebSocket URL must be in the format ws(s)://address:port\")}addr=result[1];port=parseInt(result[2],10)}}else{try{var runtimeConfig=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"];var url=\"ws:#\".replace(\"#\",\"//\");if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"url\"]){url=Module[\"websocket\"][\"url\"]}}if(url===\"ws://\"||url===\"wss://\"){var parts=addr.split(\"/\");url=url+parts[0]+\":\"+port+\"/\"+parts.slice(1).join(\"/\")}var subProtocols=\"binary\";if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"subprotocol\"]){subProtocols=Module[\"websocket\"][\"subprotocol\"]}}var opts=undefined;if(subProtocols!==\"null\"){subProtocols=subProtocols.replace(/^ +| +$/g,\"\").split(/ *, */);opts=ENVIRONMENT_IS_NODE?{\"protocol\":subProtocols.toString()}:subProtocols}if(runtimeConfig&&null===Module[\"websocket\"][\"subprotocol\"]){subProtocols=\"null\";opts=undefined}var WebSocketConstructor;if(ENVIRONMENT_IS_NODE){WebSocketConstructor=require(\"ws\")}else{WebSocketConstructor=WebSocket}ws=new WebSocketConstructor(url,opts);ws.binaryType=\"arraybuffer\"}catch(e){throw new FS.ErrnoError(23)}}var peer={addr:addr,port:port,socket:ws,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(sock,peer);SOCKFS.websocket_sock_ops.handlePeerEvents(sock,peer);if(sock.type===2&&typeof sock.sport!=\"undefined\"){peer.dgram_send_queue.push(new Uint8Array([255,255,255,255,\"p\".charCodeAt(0),\"o\".charCodeAt(0),\"r\".charCodeAt(0),\"t\".charCodeAt(0),(sock.sport&65280)>>8,sock.sport&255]))}return peer},getPeer:function(sock,addr,port){return sock.peers[addr+\":\"+port]},addPeer:function(sock,peer){sock.peers[peer.addr+\":\"+peer.port]=peer},removePeer:function(sock,peer){delete sock.peers[peer.addr+\":\"+peer.port]},handlePeerEvents:function(sock,peer){var first=true;var handleOpen=function(){Module[\"websocket\"].emit(\"open\",sock.stream.fd);try{var queued=peer.dgram_send_queue.shift();while(queued){peer.socket.send(queued);queued=peer.dgram_send_queue.shift()}}catch(e){peer.socket.close()}};function handleMessage(data){if(typeof data==\"string\"){var encoder=new TextEncoder;data=encoder.encode(data)}else{assert(data.byteLength!==undefined);if(data.byteLength==0){return}else{data=new Uint8Array(data)}}var wasfirst=first;first=false;if(wasfirst&&data.length===10&&data[0]===255&&data[1]===255&&data[2]===255&&data[3]===255&&data[4]===\"p\".charCodeAt(0)&&data[5]===\"o\".charCodeAt(0)&&data[6]===\"r\".charCodeAt(0)&&data[7]===\"t\".charCodeAt(0)){var newport=data[8]<<8|data[9];SOCKFS.websocket_sock_ops.removePeer(sock,peer);peer.port=newport;SOCKFS.websocket_sock_ops.addPeer(sock,peer);return}sock.recv_queue.push({addr:peer.addr,port:peer.port,data:data});Module[\"websocket\"].emit(\"message\",sock.stream.fd)}if(ENVIRONMENT_IS_NODE){peer.socket.on(\"open\",handleOpen);peer.socket.on(\"message\",function(data,flags){if(!flags.binary){return}handleMessage(new Uint8Array(data).buffer)});peer.socket.on(\"close\",function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)});peer.socket.on(\"error\",function(error){sock.error=14;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])})}else{peer.socket.onopen=handleOpen;peer.socket.onclose=function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)};peer.socket.onmessage=function peer_socket_onmessage(event){handleMessage(event.data)};peer.socket.onerror=function(error){sock.error=14;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])}}},poll:function(sock){if(sock.type===1&&sock.server){return sock.pending.length?64|1:0}var mask=0;var dest=sock.type===1?SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport):null;if(sock.recv_queue.length||!dest||dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=64|1}if(!dest||dest&&dest.socket.readyState===dest.socket.OPEN){mask|=4}if(dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=16}return mask},ioctl:function(sock,request,arg){switch(request){case 21531:var bytes=0;if(sock.recv_queue.length){bytes=sock.recv_queue[0].data.length}HEAP32[arg>>2]=bytes;return 0;default:return 28}},close:function(sock){if(sock.server){try{sock.server.close()}catch(e){}sock.server=null}var peers=Object.keys(sock.peers);for(var i=0;i<peers.length;i++){var peer=sock.peers[peers[i]];try{peer.socket.close()}catch(e){}SOCKFS.websocket_sock_ops.removePeer(sock,peer)}return 0},bind:function(sock,addr,port){if(typeof sock.saddr!=\"undefined\"||typeof sock.sport!=\"undefined\"){throw new FS.ErrnoError(28)}sock.saddr=addr;sock.sport=port;if(sock.type===2){if(sock.server){sock.server.close();sock.server=null}try{sock.sock_ops.listen(sock,0)}catch(e){if(!(e instanceof FS.ErrnoError))throw e;if(e.errno!==138)throw e}}},connect:function(sock,addr,port){if(sock.server){throw new FS.ErrnoError(138)}if(typeof sock.daddr!=\"undefined\"&&typeof sock.dport!=\"undefined\"){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(dest){if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(7)}else{throw new FS.ErrnoError(30)}}}var peer=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port);sock.daddr=peer.addr;sock.dport=peer.port;throw new FS.ErrnoError(26)},listen:function(sock,backlog){if(!ENVIRONMENT_IS_NODE){throw new FS.ErrnoError(138)}if(sock.server){throw new FS.ErrnoError(28)}var WebSocketServer=require(\"ws\").Server;var host=sock.saddr;sock.server=new WebSocketServer({host:host,port:sock.sport});Module[\"websocket\"].emit(\"listen\",sock.stream.fd);sock.server.on(\"connection\",function(ws){if(sock.type===1){var newsock=SOCKFS.createSocket(sock.family,sock.type,sock.protocol);var peer=SOCKFS.websocket_sock_ops.createPeer(newsock,ws);newsock.daddr=peer.addr;newsock.dport=peer.port;sock.pending.push(newsock);Module[\"websocket\"].emit(\"connection\",newsock.stream.fd)}else{SOCKFS.websocket_sock_ops.createPeer(sock,ws);Module[\"websocket\"].emit(\"connection\",sock.stream.fd)}});sock.server.on(\"closed\",function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd);sock.server=null});sock.server.on(\"error\",function(error){sock.error=23;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"EHOSTUNREACH: Host is unreachable\"])})},accept:function(listensock){if(!listensock.server||!listensock.pending.length){throw new FS.ErrnoError(28)}var newsock=listensock.pending.shift();newsock.stream.flags=listensock.stream.flags;return newsock},getname:function(sock,peer){var addr,port;if(peer){if(sock.daddr===undefined||sock.dport===undefined){throw new FS.ErrnoError(53)}addr=sock.daddr;port=sock.dport}else{addr=sock.saddr||0;port=sock.sport||0}return{addr:addr,port:port}},sendmsg:function(sock,buffer,offset,length,addr,port){if(sock.type===2){if(addr===undefined||port===undefined){addr=sock.daddr;port=sock.dport}if(addr===undefined||port===undefined){throw new FS.ErrnoError(17)}}else{addr=sock.daddr;port=sock.dport}var dest=SOCKFS.websocket_sock_ops.getPeer(sock,addr,port);if(sock.type===1){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){throw new FS.ErrnoError(53)}else if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(6)}}if(ArrayBuffer.isView(buffer)){offset+=buffer.byteOffset;buffer=buffer.buffer}var data;data=buffer.slice(offset,offset+length);if(sock.type===2){if(!dest||dest.socket.readyState!==dest.socket.OPEN){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){dest=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port)}dest.dgram_send_queue.push(data);return length}}try{dest.socket.send(data);return length}catch(e){throw new FS.ErrnoError(28)}},recvmsg:function(sock,length){if(sock.type===1&&sock.server){throw new FS.ErrnoError(53)}var queued=sock.recv_queue.shift();if(!queued){if(sock.type===1){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(!dest){throw new FS.ErrnoError(53)}else if(dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){return null}else{throw new FS.ErrnoError(6)}}else{throw new FS.ErrnoError(6)}}var queuedLength=queued.data.byteLength||queued.data.length;var queuedOffset=queued.data.byteOffset||0;var queuedBuffer=queued.data.buffer||queued.data;var bytesRead=Math.min(length,queuedLength);var res={buffer:new Uint8Array(queuedBuffer,queuedOffset,bytesRead),addr:queued.addr,port:queued.port};if(sock.type===1&&bytesRead<queuedLength){var bytesRemaining=queuedLength-bytesRead;queued.data=new Uint8Array(queuedBuffer,queuedOffset+bytesRead,bytesRemaining);sock.recv_queue.unshift(queued)}return res}}};function getSocketFromFD(fd){var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function inetNtop4(addr){return(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255)}function inetNtop6(ints){var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str}function readSockaddr(sa,salen){var family=HEAP16[sa>>1];var port=_ntohs(HEAPU16[sa+2>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>2];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>2],HEAP32[sa+12>>2],HEAP32[sa+16>>2],HEAP32[sa+20>>2]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}}function inetPton4(str){var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}function jstoi_q(str){return parseInt(str)}function inetPton6(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]==\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr:function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};function getSocketAddress(addrp,addrlen,allowNull){if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}function ___syscall_connect(fd,addr,addrlen){try{var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd);if(size<cwdLengthInBytes+1)return-68;stringToUTF8(cwd,buf,size);return buf}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_mkdir(path,mode){try{path=SYSCALLS.getStr(path);return SYSCALLS.doMkdir(path,mode)}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_readlinkat(dirfd,path,buf,bufsize){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);return SYSCALLS.doReadlink(path,buf,bufsize)}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_socket(domain,type,protocol){try{var sock=SOCKFS.createSocket(domain,type,protocol);assert(sock.stream.fd<64);return sock.stream.fd}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=(handle=>handle);return handle}finalizationRegistry=new FinalizationRegistry(info=>{console.warn(info.leakWarning.stack.replace(/^Error: /,\"\"));releaseClassHandle(info.$$)});attachFinalizer=(handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};var cls=$$.ptrType.registeredClass;info.leakWarning=new Error(\"Embind found a leaked C++ instance \"+cls.name+\" <0x\"+$$.ptr.toString(16)+\">.\\n\"+\"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\"+\"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\"+\"Originally allocated\");if(\"captureStackTrace\"in Error){Error.captureStackTrace(info.leakWarning,RegisteredPointer_fromWireType)}finalizationRegistry.register(handle,info,handle)}return handle});detachFinalizer=(handle=>finalizationRegistry.unregister(handle));return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){assert(\"dynCall_\"+sig in Module,\"bad function pointer type - no table for sig '\"+sig+\"'\");if(args&&args.length){assert(args.length===sig.substring(1).replace(/j/g,\"--\").length)}else{assert(sig.length==1)}var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}assert(getWasmTableEntry(ptr),\"missing table entry in dynCall: \"+ptr);return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){assert(sig.includes(\"j\"),\"getDynCaller should only be called with i64 sigs\");var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){func.argCount=argCount-1;proto[methodName]=func}else{proto[methodName].overloadTable[argCount-1]=func}return[]});return[]})}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!=\"number\"&&typeof value!=\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{if(typeof value!=\"number\"&&typeof value!=\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+toTypeName)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emscripten_date_now(){return Date.now()}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return Emval.toHandle(v)}function __localtime_js(time,tmPtr){var date=new Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var start=new Date(date.getFullYear(),0,1);var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst}function _tzset_impl(timezone,daylight,tzname){var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAP32[timezone>>2]=stdTimezoneOffset*60;HEAP32[daylight>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return match?match[1]:\"GMT\"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocateUTF8(winterName);var summerNamePtr=allocateUTF8(summerName);if(summerOffset<winterOffset){HEAP32[tzname>>2]=winterNamePtr;HEAP32[tzname+4>>2]=summerNamePtr}else{HEAP32[tzname>>2]=summerNamePtr;HEAP32[tzname+4>>2]=winterNamePtr}}function __tzset_js(timezone,daylight,tzname){if(__tzset_js.called)return;__tzset_js.called=true;_tzset_impl(timezone,daylight,tzname)}function _abort(){abort(\"native code called abort()\")}var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){assert(Array.isArray(readAsmConstArgsArray));assert(buf%16==0);readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){assert(ch===100||ch===102||ch===105,\"Invalid character \"+ch+'(\"'+String.fromCharCode(ch)+'\") in readAsmConstArgs! Use only \"d\", \"f\" or \"i\", and do not specify \"v\" for void return argument.');var readAsmConstArgsDouble=ch<105;if(readAsmConstArgsDouble&&buf&1)buf++;readAsmConstArgsArray.push(readAsmConstArgsDouble?HEAPF64[buf++>>1]:HEAP32[buf]);++buf}return readAsmConstArgsArray}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);if(!ASM_CONSTS.hasOwnProperty(code))abort(\"No EM_ASM constant found at address \"+code);return ASM_CONSTS[code].apply(null,args)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_max(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){err(\"emscripten_realloc_buffer: Attempted to grow heap from \"+buffer.byteLength+\" bytes to \"+size+\" bytes, but got error: \"+e)}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;assert(requestedSize>oldSize);var maxHeapSize=_emscripten_get_heap_max();if(requestedSize>maxHeapSize){err(\"Cannot enlarge memory, asked to go up to \"+requestedSize+\" bytes, but the limit is \"+maxHeapSize+\" bytes!\");return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}err(\"Failed to grow the heap from \"+oldSize+\" bytes to \"+newSize+\" bytes, not enough memory!\");return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _exit(status){exit(status)}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;HEAP8[pbuf>>0]=type;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function getHostByName(name){var ret=_malloc(20);var nameBuf=_malloc(name.length+1);stringToUTF8(name,nameBuf,name.length+1);HEAP32[ret>>2]=nameBuf;var aliasesBuf=_malloc(4);HEAP32[aliasesBuf>>2]=0;HEAP32[ret+4>>2]=aliasesBuf;var afinet=2;HEAP32[ret+8>>2]=afinet;HEAP32[ret+12>>2]=4;var addrListBuf=_malloc(12);HEAP32[addrListBuf>>2]=addrListBuf+8;HEAP32[addrListBuf+4>>2]=0;HEAP32[addrListBuf+8>>2]=inetPton4(DNS.lookup_name(name));HEAP32[ret+16>>2]=addrListBuf;return ret}function _gethostbyname(name){return getHostByName(UTF8ToString(name))}function _setTempRet0(val){setTempRet0(val)}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_createLazyFile\"]=FS.createLazyFile;Module[\"FS_createDevice\"]=FS.createDevice;Module[\"FS_unlink\"]=FS.unlink;ERRNO_CODES={\"EPERM\":63,\"ENOENT\":44,\"ESRCH\":71,\"EINTR\":27,\"EIO\":29,\"ENXIO\":60,\"E2BIG\":1,\"ENOEXEC\":45,\"EBADF\":8,\"ECHILD\":12,\"EAGAIN\":6,\"EWOULDBLOCK\":6,\"ENOMEM\":48,\"EACCES\":2,\"EFAULT\":21,\"ENOTBLK\":105,\"EBUSY\":10,\"EEXIST\":20,\"EXDEV\":75,\"ENODEV\":43,\"ENOTDIR\":54,\"EISDIR\":31,\"EINVAL\":28,\"ENFILE\":41,\"EMFILE\":33,\"ENOTTY\":59,\"ETXTBSY\":74,\"EFBIG\":22,\"ENOSPC\":51,\"ESPIPE\":70,\"EROFS\":69,\"EMLINK\":34,\"EPIPE\":64,\"EDOM\":18,\"ERANGE\":68,\"ENOMSG\":49,\"EIDRM\":24,\"ECHRNG\":106,\"EL2NSYNC\":156,\"EL3HLT\":107,\"EL3RST\":108,\"ELNRNG\":109,\"EUNATCH\":110,\"ENOCSI\":111,\"EL2HLT\":112,\"EDEADLK\":16,\"ENOLCK\":46,\"EBADE\":113,\"EBADR\":114,\"EXFULL\":115,\"ENOANO\":104,\"EBADRQC\":103,\"EBADSLT\":102,\"EDEADLOCK\":16,\"EBFONT\":101,\"ENOSTR\":100,\"ENODATA\":116,\"ETIME\":117,\"ENOSR\":118,\"ENONET\":119,\"ENOPKG\":120,\"EREMOTE\":121,\"ENOLINK\":47,\"EADV\":122,\"ESRMNT\":123,\"ECOMM\":124,\"EPROTO\":65,\"EMULTIHOP\":36,\"EDOTDOT\":125,\"EBADMSG\":9,\"ENOTUNIQ\":126,\"EBADFD\":127,\"EREMCHG\":128,\"ELIBACC\":129,\"ELIBBAD\":130,\"ELIBSCN\":131,\"ELIBMAX\":132,\"ELIBEXEC\":133,\"ENOSYS\":52,\"ENOTEMPTY\":55,\"ENAMETOOLONG\":37,\"ELOOP\":32,\"EOPNOTSUPP\":138,\"EPFNOSUPPORT\":139,\"ECONNRESET\":15,\"ENOBUFS\":42,\"EAFNOSUPPORT\":5,\"EPROTOTYPE\":67,\"ENOTSOCK\":57,\"ENOPROTOOPT\":50,\"ESHUTDOWN\":140,\"ECONNREFUSED\":14,\"EADDRINUSE\":3,\"ECONNABORTED\":13,\"ENETUNREACH\":40,\"ENETDOWN\":38,\"ETIMEDOUT\":73,\"EHOSTDOWN\":142,\"EHOSTUNREACH\":23,\"EINPROGRESS\":26,\"EALREADY\":7,\"EDESTADDRREQ\":17,\"EMSGSIZE\":35,\"EPROTONOSUPPORT\":66,\"ESOCKTNOSUPPORT\":137,\"EADDRNOTAVAIL\":4,\"ENETRESET\":39,\"EISCONN\":30,\"ENOTCONN\":53,\"ETOOMANYREFS\":141,\"EUSERS\":136,\"EDQUOT\":19,\"ESTALE\":72,\"ENOTSUP\":138,\"ENOMEDIUM\":148,\"EILSEQ\":25,\"EOVERFLOW\":61,\"ECANCELED\":11,\"ENOTRECOVERABLE\":56,\"EOWNERDEAD\":62,\"ESTRPIPE\":135};InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=true;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var decodeBase64=typeof atob==\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE==\"boolean\"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,\"base64\");return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function checkIncomingModuleAPI(){ignoredModuleProp(\"fetchSettings\")}var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"__syscall__newselect\":___syscall__newselect,\"__syscall_chdir\":___syscall_chdir,\"__syscall_connect\":___syscall_connect,\"__syscall_fcntl64\":___syscall_fcntl64,\"__syscall_getcwd\":___syscall_getcwd,\"__syscall_ioctl\":___syscall_ioctl,\"__syscall_mkdir\":___syscall_mkdir,\"__syscall_openat\":___syscall_openat,\"__syscall_readlinkat\":___syscall_readlinkat,\"__syscall_socket\":___syscall_socket,\"_embind_finalize_value_object\":__embind_finalize_value_object,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_class_function\":__embind_register_class_class_function,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_function\":__embind_register_function,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_value_object\":__embind_register_value_object,\"_embind_register_value_object_field\":__embind_register_value_object_field,\"_embind_register_void\":__embind_register_void,\"_emscripten_date_now\":__emscripten_date_now,\"_emval_decref\":__emval_decref,\"_emval_incref\":__emval_incref,\"_emval_take_value\":__emval_take_value,\"_localtime_js\":__localtime_js,\"_tzset_js\":__tzset_js,\"abort\":_abort,\"emscripten_asm_const_int\":_emscripten_asm_const_int,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"environ_get\":_environ_get,\"environ_sizes_get\":_environ_sizes_get,\"exit\":_exit,\"fd_close\":_fd_close,\"fd_fdstat_get\":_fd_fdstat_get,\"fd_read\":_fd_read,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"gethostbyname\":_gethostbyname,\"setTempRet0\":_setTempRet0,\"strftime\":_strftime,\"strftime_l\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=createExportWrapper(\"__wasm_call_ctors\");var _free=Module[\"_free\"]=createExportWrapper(\"free\");var _malloc=Module[\"_malloc\"]=createExportWrapper(\"malloc\");var ___errno_location=Module[\"___errno_location\"]=createExportWrapper(\"__errno_location\");var _htons=Module[\"_htons\"]=createExportWrapper(\"htons\");var ___getTypeName=Module[\"___getTypeName\"]=createExportWrapper(\"__getTypeName\");var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=createExportWrapper(\"__embind_register_native_and_builtin_types\");var ___stdio_exit=Module[\"___stdio_exit\"]=createExportWrapper(\"__stdio_exit\");var _ntohs=Module[\"_ntohs\"]=createExportWrapper(\"ntohs\");var _emscripten_stack_init=Module[\"_emscripten_stack_init\"]=function(){return(_emscripten_stack_init=Module[\"_emscripten_stack_init\"]=Module[\"asm\"][\"emscripten_stack_init\"]).apply(null,arguments)};var _emscripten_stack_get_free=Module[\"_emscripten_stack_get_free\"]=function(){return(_emscripten_stack_get_free=Module[\"_emscripten_stack_get_free\"]=Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null,arguments)};var _emscripten_stack_get_base=Module[\"_emscripten_stack_get_base\"]=function(){return(_emscripten_stack_get_base=Module[\"_emscripten_stack_get_base\"]=Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null,arguments)};var _emscripten_stack_get_end=Module[\"_emscripten_stack_get_end\"]=function(){return(_emscripten_stack_get_end=Module[\"_emscripten_stack_get_end\"]=Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=createExportWrapper(\"stackSave\");var stackRestore=Module[\"stackRestore\"]=createExportWrapper(\"stackRestore\");var stackAlloc=Module[\"stackAlloc\"]=createExportWrapper(\"stackAlloc\");var dynCall_jiji=Module[\"dynCall_jiji\"]=createExportWrapper(\"dynCall_jiji\");var dynCall_viijii=Module[\"dynCall_viijii\"]=createExportWrapper(\"dynCall_viijii\");var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=createExportWrapper(\"dynCall_iiiiij\");var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=createExportWrapper(\"dynCall_iiiiijj\");var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=createExportWrapper(\"dynCall_iiiiiijj\");unexportedRuntimeFunction(\"intArrayFromString\",false);unexportedRuntimeFunction(\"intArrayToString\",false);unexportedRuntimeFunction(\"ccall\",false);unexportedRuntimeFunction(\"cwrap\",false);unexportedRuntimeFunction(\"setValue\",false);unexportedRuntimeFunction(\"getValue\",false);unexportedRuntimeFunction(\"allocate\",false);unexportedRuntimeFunction(\"UTF8ArrayToString\",false);Module[\"UTF8ToString\"]=UTF8ToString;unexportedRuntimeFunction(\"stringToUTF8Array\",false);Module[\"stringToUTF8\"]=stringToUTF8;unexportedRuntimeFunction(\"lengthBytesUTF8\",false);unexportedRuntimeFunction(\"stackTrace\",false);unexportedRuntimeFunction(\"addOnPreRun\",false);unexportedRuntimeFunction(\"addOnInit\",false);unexportedRuntimeFunction(\"addOnPreMain\",false);unexportedRuntimeFunction(\"addOnExit\",false);unexportedRuntimeFunction(\"addOnPostRun\",false);unexportedRuntimeFunction(\"writeStringToMemory\",false);unexportedRuntimeFunction(\"writeArrayToMemory\",false);unexportedRuntimeFunction(\"writeAsciiToMemory\",false);Module[\"addRunDependency\"]=addRunDependency;Module[\"removeRunDependency\"]=removeRunDependency;unexportedRuntimeFunction(\"FS_createFolder\",false);Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_createLazyFile\"]=FS.createLazyFile;unexportedRuntimeFunction(\"FS_createLink\",false);Module[\"FS_createDevice\"]=FS.createDevice;Module[\"FS_unlink\"]=FS.unlink;unexportedRuntimeFunction(\"getLEB\",false);unexportedRuntimeFunction(\"getFunctionTables\",false);unexportedRuntimeFunction(\"alignFunctionTables\",false);unexportedRuntimeFunction(\"registerFunctions\",false);unexportedRuntimeFunction(\"addFunction\",false);unexportedRuntimeFunction(\"removeFunction\",false);unexportedRuntimeFunction(\"getFuncWrapper\",false);unexportedRuntimeFunction(\"prettyPrint\",false);unexportedRuntimeFunction(\"dynCall\",false);unexportedRuntimeFunction(\"getCompilerSetting\",false);unexportedRuntimeFunction(\"print\",false);unexportedRuntimeFunction(\"printErr\",false);unexportedRuntimeFunction(\"getTempRet0\",false);unexportedRuntimeFunction(\"setTempRet0\",false);unexportedRuntimeFunction(\"callMain\",false);unexportedRuntimeFunction(\"abort\",false);unexportedRuntimeFunction(\"keepRuntimeAlive\",false);unexportedRuntimeFunction(\"zeroMemory\",false);unexportedRuntimeFunction(\"stringToNewUTF8\",false);unexportedRuntimeFunction(\"emscripten_realloc_buffer\",false);unexportedRuntimeFunction(\"ENV\",false);unexportedRuntimeFunction(\"ERRNO_CODES\",false);unexportedRuntimeFunction(\"ERRNO_MESSAGES\",false);unexportedRuntimeFunction(\"setErrNo\",false);unexportedRuntimeFunction(\"inetPton4\",false);unexportedRuntimeFunction(\"inetNtop4\",false);unexportedRuntimeFunction(\"inetPton6\",false);unexportedRuntimeFunction(\"inetNtop6\",false);unexportedRuntimeFunction(\"readSockaddr\",false);unexportedRuntimeFunction(\"writeSockaddr\",false);unexportedRuntimeFunction(\"DNS\",false);unexportedRuntimeFunction(\"getHostByName\",false);unexportedRuntimeFunction(\"Protocols\",false);unexportedRuntimeFunction(\"Sockets\",false);unexportedRuntimeFunction(\"getRandomDevice\",false);unexportedRuntimeFunction(\"traverseStack\",false);unexportedRuntimeFunction(\"UNWIND_CACHE\",false);unexportedRuntimeFunction(\"convertPCtoSourceLocation\",false);unexportedRuntimeFunction(\"readAsmConstArgsArray\",false);unexportedRuntimeFunction(\"readAsmConstArgs\",false);unexportedRuntimeFunction(\"mainThreadEM_ASM\",false);unexportedRuntimeFunction(\"jstoi_q\",false);unexportedRuntimeFunction(\"jstoi_s\",false);unexportedRuntimeFunction(\"getExecutableName\",false);unexportedRuntimeFunction(\"listenOnce\",false);unexportedRuntimeFunction(\"autoResumeAudioContext\",false);unexportedRuntimeFunction(\"dynCallLegacy\",false);unexportedRuntimeFunction(\"getDynCaller\",false);unexportedRuntimeFunction(\"dynCall\",false);unexportedRuntimeFunction(\"handleException\",false);unexportedRuntimeFunction(\"runtimeKeepalivePush\",false);unexportedRuntimeFunction(\"runtimeKeepalivePop\",false);unexportedRuntimeFunction(\"callUserCallback\",false);unexportedRuntimeFunction(\"maybeExit\",false);unexportedRuntimeFunction(\"safeSetTimeout\",false);unexportedRuntimeFunction(\"asmjsMangle\",false);unexportedRuntimeFunction(\"asyncLoad\",false);unexportedRuntimeFunction(\"alignMemory\",false);unexportedRuntimeFunction(\"mmapAlloc\",false);unexportedRuntimeFunction(\"reallyNegative\",false);unexportedRuntimeFunction(\"unSign\",false);unexportedRuntimeFunction(\"reSign\",false);unexportedRuntimeFunction(\"formatString\",false);unexportedRuntimeFunction(\"PATH\",false);unexportedRuntimeFunction(\"PATH_FS\",false);unexportedRuntimeFunction(\"SYSCALLS\",false);unexportedRuntimeFunction(\"getSocketFromFD\",false);unexportedRuntimeFunction(\"getSocketAddress\",false);unexportedRuntimeFunction(\"JSEvents\",false);unexportedRuntimeFunction(\"registerKeyEventCallback\",false);unexportedRuntimeFunction(\"specialHTMLTargets\",false);unexportedRuntimeFunction(\"maybeCStringToJsString\",false);unexportedRuntimeFunction(\"findEventTarget\",false);unexportedRuntimeFunction(\"findCanvasEventTarget\",false);unexportedRuntimeFunction(\"getBoundingClientRect\",false);unexportedRuntimeFunction(\"fillMouseEventData\",false);unexportedRuntimeFunction(\"registerMouseEventCallback\",false);unexportedRuntimeFunction(\"registerWheelEventCallback\",false);unexportedRuntimeFunction(\"registerUiEventCallback\",false);unexportedRuntimeFunction(\"registerFocusEventCallback\",false);unexportedRuntimeFunction(\"fillDeviceOrientationEventData\",false);unexportedRuntimeFunction(\"registerDeviceOrientationEventCallback\",false);unexportedRuntimeFunction(\"fillDeviceMotionEventData\",false);unexportedRuntimeFunction(\"registerDeviceMotionEventCallback\",false);unexportedRuntimeFunction(\"screenOrientation\",false);unexportedRuntimeFunction(\"fillOrientationChangeEventData\",false);unexportedRuntimeFunction(\"registerOrientationChangeEventCallback\",false);unexportedRuntimeFunction(\"fillFullscreenChangeEventData\",false);unexportedRuntimeFunction(\"registerFullscreenChangeEventCallback\",false);unexportedRuntimeFunction(\"registerRestoreOldStyle\",false);unexportedRuntimeFunction(\"hideEverythingExceptGivenElement\",false);unexportedRuntimeFunction(\"restoreHiddenElements\",false);unexportedRuntimeFunction(\"setLetterbox\",false);unexportedRuntimeFunction(\"currentFullscreenStrategy\",false);unexportedRuntimeFunction(\"restoreOldWindowedStyle\",false);unexportedRuntimeFunction(\"softFullscreenResizeWebGLRenderTarget\",false);unexportedRuntimeFunction(\"doRequestFullscreen\",false);unexportedRuntimeFunction(\"fillPointerlockChangeEventData\",false);unexportedRuntimeFunction(\"registerPointerlockChangeEventCallback\",false);unexportedRuntimeFunction(\"registerPointerlockErrorEventCallback\",false);unexportedRuntimeFunction(\"requestPointerLock\",false);unexportedRuntimeFunction(\"fillVisibilityChangeEventData\",false);unexportedRuntimeFunction(\"registerVisibilityChangeEventCallback\",false);unexportedRuntimeFunction(\"registerTouchEventCallback\",false);unexportedRuntimeFunction(\"fillGamepadEventData\",false);unexportedRuntimeFunction(\"registerGamepadEventCallback\",false);unexportedRuntimeFunction(\"registerBeforeUnloadEventCallback\",false);unexportedRuntimeFunction(\"fillBatteryEventData\",false);unexportedRuntimeFunction(\"battery\",false);unexportedRuntimeFunction(\"registerBatteryEventCallback\",false);unexportedRuntimeFunction(\"setCanvasElementSize\",false);unexportedRuntimeFunction(\"getCanvasElementSize\",false);unexportedRuntimeFunction(\"demangle\",false);unexportedRuntimeFunction(\"demangleAll\",false);unexportedRuntimeFunction(\"jsStackTrace\",false);unexportedRuntimeFunction(\"stackTrace\",false);unexportedRuntimeFunction(\"getEnvStrings\",false);unexportedRuntimeFunction(\"checkWasiClock\",false);unexportedRuntimeFunction(\"writeI53ToI64\",false);unexportedRuntimeFunction(\"writeI53ToI64Clamped\",false);unexportedRuntimeFunction(\"writeI53ToI64Signaling\",false);unexportedRuntimeFunction(\"writeI53ToU64Clamped\",false);unexportedRuntimeFunction(\"writeI53ToU64Signaling\",false);unexportedRuntimeFunction(\"readI53FromI64\",false);unexportedRuntimeFunction(\"readI53FromU64\",false);unexportedRuntimeFunction(\"convertI32PairToI53\",false);unexportedRuntimeFunction(\"convertU32PairToI53\",false);unexportedRuntimeFunction(\"setImmediateWrapped\",false);unexportedRuntimeFunction(\"clearImmediateWrapped\",false);unexportedRuntimeFunction(\"polyfillSetImmediate\",false);unexportedRuntimeFunction(\"uncaughtExceptionCount\",false);unexportedRuntimeFunction(\"exceptionLast\",false);unexportedRuntimeFunction(\"exceptionCaught\",false);unexportedRuntimeFunction(\"ExceptionInfo\",false);unexportedRuntimeFunction(\"CatchInfo\",false);unexportedRuntimeFunction(\"exception_addRef\",false);unexportedRuntimeFunction(\"exception_decRef\",false);unexportedRuntimeFunction(\"Browser\",false);unexportedRuntimeFunction(\"funcWrappers\",false);unexportedRuntimeFunction(\"getFuncWrapper\",false);unexportedRuntimeFunction(\"setMainLoop\",false);unexportedRuntimeFunction(\"wget\",false);Module[\"FS\"]=FS;unexportedRuntimeFunction(\"MEMFS\",false);unexportedRuntimeFunction(\"TTY\",false);unexportedRuntimeFunction(\"PIPEFS\",false);unexportedRuntimeFunction(\"SOCKFS\",false);unexportedRuntimeFunction(\"_setNetworkCallback\",false);unexportedRuntimeFunction(\"tempFixedLengthArray\",false);unexportedRuntimeFunction(\"miniTempWebGLFloatBuffers\",false);unexportedRuntimeFunction(\"heapObjectForWebGLType\",false);unexportedRuntimeFunction(\"heapAccessShiftForWebGLHeap\",false);unexportedRuntimeFunction(\"GL\",false);unexportedRuntimeFunction(\"emscriptenWebGLGet\",false);unexportedRuntimeFunction(\"computeUnpackAlignedImageSize\",false);unexportedRuntimeFunction(\"emscriptenWebGLGetTexPixelData\",false);unexportedRuntimeFunction(\"emscriptenWebGLGetUniform\",false);unexportedRuntimeFunction(\"webglGetUniformLocation\",false);unexportedRuntimeFunction(\"webglPrepareUniformLocationsBeforeFirstUse\",false);unexportedRuntimeFunction(\"webglGetLeftBracePos\",false);unexportedRuntimeFunction(\"emscriptenWebGLGetVertexAttrib\",false);unexportedRuntimeFunction(\"writeGLArray\",false);unexportedRuntimeFunction(\"AL\",false);unexportedRuntimeFunction(\"SDL_unicode\",false);unexportedRuntimeFunction(\"SDL_ttfContext\",false);unexportedRuntimeFunction(\"SDL_audio\",false);unexportedRuntimeFunction(\"SDL\",false);unexportedRuntimeFunction(\"SDL_gfx\",false);unexportedRuntimeFunction(\"GLUT\",false);unexportedRuntimeFunction(\"EGL\",false);unexportedRuntimeFunction(\"GLFW_Window\",false);unexportedRuntimeFunction(\"GLFW\",false);unexportedRuntimeFunction(\"GLEW\",false);unexportedRuntimeFunction(\"IDBStore\",false);unexportedRuntimeFunction(\"runAndAbortIfError\",false);unexportedRuntimeFunction(\"InternalError\",false);unexportedRuntimeFunction(\"BindingError\",false);unexportedRuntimeFunction(\"UnboundTypeError\",false);unexportedRuntimeFunction(\"PureVirtualError\",false);unexportedRuntimeFunction(\"init_embind\",false);unexportedRuntimeFunction(\"throwInternalError\",false);unexportedRuntimeFunction(\"throwBindingError\",false);unexportedRuntimeFunction(\"throwUnboundTypeError\",false);unexportedRuntimeFunction(\"ensureOverloadTable\",false);unexportedRuntimeFunction(\"exposePublicSymbol\",false);unexportedRuntimeFunction(\"replacePublicSymbol\",false);unexportedRuntimeFunction(\"extendError\",false);unexportedRuntimeFunction(\"createNamedFunction\",false);unexportedRuntimeFunction(\"registeredInstances\",false);unexportedRuntimeFunction(\"getBasestPointer\",false);unexportedRuntimeFunction(\"registerInheritedInstance\",false);unexportedRuntimeFunction(\"unregisterInheritedInstance\",false);unexportedRuntimeFunction(\"getInheritedInstance\",false);unexportedRuntimeFunction(\"getInheritedInstanceCount\",false);unexportedRuntimeFunction(\"getLiveInheritedInstances\",false);unexportedRuntimeFunction(\"registeredTypes\",false);unexportedRuntimeFunction(\"awaitingDependencies\",false);unexportedRuntimeFunction(\"typeDependencies\",false);unexportedRuntimeFunction(\"registeredPointers\",false);unexportedRuntimeFunction(\"registerType\",false);unexportedRuntimeFunction(\"whenDependentTypesAreResolved\",false);unexportedRuntimeFunction(\"embind_charCodes\",false);unexportedRuntimeFunction(\"embind_init_charCodes\",false);unexportedRuntimeFunction(\"readLatin1String\",false);unexportedRuntimeFunction(\"getTypeName\",false);unexportedRuntimeFunction(\"heap32VectorToArray\",false);unexportedRuntimeFunction(\"requireRegisteredType\",false);unexportedRuntimeFunction(\"getShiftFromSize\",false);unexportedRuntimeFunction(\"integerReadValueFromPointer\",false);unexportedRuntimeFunction(\"enumReadValueFromPointer\",false);unexportedRuntimeFunction(\"floatReadValueFromPointer\",false);unexportedRuntimeFunction(\"simpleReadValueFromPointer\",false);unexportedRuntimeFunction(\"runDestructors\",false);unexportedRuntimeFunction(\"new_\",false);unexportedRuntimeFunction(\"craftInvokerFunction\",false);unexportedRuntimeFunction(\"embind__requireFunction\",false);unexportedRuntimeFunction(\"tupleRegistrations\",false);unexportedRuntimeFunction(\"structRegistrations\",false);unexportedRuntimeFunction(\"genericPointerToWireType\",false);unexportedRuntimeFunction(\"constNoSmartPtrRawPointerToWireType\",false);unexportedRuntimeFunction(\"nonConstNoSmartPtrRawPointerToWireType\",false);unexportedRuntimeFunction(\"init_RegisteredPointer\",false);unexportedRuntimeFunction(\"RegisteredPointer\",false);unexportedRuntimeFunction(\"RegisteredPointer_getPointee\",false);unexportedRuntimeFunction(\"RegisteredPointer_destructor\",false);unexportedRuntimeFunction(\"RegisteredPointer_deleteObject\",false);unexportedRuntimeFunction(\"RegisteredPointer_fromWireType\",false);unexportedRuntimeFunction(\"runDestructor\",false);unexportedRuntimeFunction(\"releaseClassHandle\",false);unexportedRuntimeFunction(\"finalizationRegistry\",false);unexportedRuntimeFunction(\"detachFinalizer_deps\",false);unexportedRuntimeFunction(\"detachFinalizer\",false);unexportedRuntimeFunction(\"attachFinalizer\",false);unexportedRuntimeFunction(\"makeClassHandle\",false);unexportedRuntimeFunction(\"init_ClassHandle\",false);unexportedRuntimeFunction(\"ClassHandle\",false);unexportedRuntimeFunction(\"ClassHandle_isAliasOf\",false);unexportedRuntimeFunction(\"throwInstanceAlreadyDeleted\",false);unexportedRuntimeFunction(\"ClassHandle_clone\",false);unexportedRuntimeFunction(\"ClassHandle_delete\",false);unexportedRuntimeFunction(\"deletionQueue\",false);unexportedRuntimeFunction(\"ClassHandle_isDeleted\",false);unexportedRuntimeFunction(\"ClassHandle_deleteLater\",false);unexportedRuntimeFunction(\"flushPendingDeletes\",false);unexportedRuntimeFunction(\"delayFunction\",false);unexportedRuntimeFunction(\"setDelayFunction\",false);unexportedRuntimeFunction(\"RegisteredClass\",false);unexportedRuntimeFunction(\"shallowCopyInternalPointer\",false);unexportedRuntimeFunction(\"downcastPointer\",false);unexportedRuntimeFunction(\"upcastPointer\",false);unexportedRuntimeFunction(\"validateThis\",false);unexportedRuntimeFunction(\"char_0\",false);unexportedRuntimeFunction(\"char_9\",false);unexportedRuntimeFunction(\"makeLegalFunctionName\",false);unexportedRuntimeFunction(\"emval_handle_array\",false);unexportedRuntimeFunction(\"emval_free_list\",false);unexportedRuntimeFunction(\"emval_symbols\",false);unexportedRuntimeFunction(\"init_emval\",false);unexportedRuntimeFunction(\"count_emval_handles\",false);unexportedRuntimeFunction(\"get_first_emval\",false);unexportedRuntimeFunction(\"getStringOrSymbol\",false);unexportedRuntimeFunction(\"Emval\",false);unexportedRuntimeFunction(\"emval_newers\",false);unexportedRuntimeFunction(\"craftEmvalAllocator\",false);unexportedRuntimeFunction(\"emval_get_global\",false);unexportedRuntimeFunction(\"emval_methodCallers\",false);unexportedRuntimeFunction(\"emval_registeredMethods\",false);unexportedRuntimeFunction(\"warnOnce\",false);unexportedRuntimeFunction(\"stackSave\",false);unexportedRuntimeFunction(\"stackRestore\",false);unexportedRuntimeFunction(\"stackAlloc\",false);unexportedRuntimeFunction(\"AsciiToString\",false);unexportedRuntimeFunction(\"stringToAscii\",false);unexportedRuntimeFunction(\"UTF16ToString\",false);unexportedRuntimeFunction(\"stringToUTF16\",false);unexportedRuntimeFunction(\"lengthBytesUTF16\",false);unexportedRuntimeFunction(\"UTF32ToString\",false);unexportedRuntimeFunction(\"stringToUTF32\",false);unexportedRuntimeFunction(\"lengthBytesUTF32\",false);unexportedRuntimeFunction(\"allocateUTF8\",false);unexportedRuntimeFunction(\"allocateUTF8OnStack\",false);Module[\"writeStackCookie\"]=writeStackCookie;Module[\"checkStackCookie\"]=checkStackCookie;unexportedRuntimeSymbol(\"ALLOC_NORMAL\",false);unexportedRuntimeSymbol(\"ALLOC_STACK\",false);var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function stackCheckInit(){_emscripten_stack_init();writeStackCookie()}function run(args){args=args||arguments_;if(runDependencies>0){return}stackCheckInit();preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();assert(!Module[\"_main\"],'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}checkStackCookie()}Module[\"run\"]=run;function checkUnflushedContent(){var oldOut=out;var oldErr=err;var has=false;out=err=(x=>{has=true});try{___stdio_exit();[\"stdout\",\"stderr\"].forEach(function(name){var info=FS.analyzePath(\"/dev/\"+name);if(!info)return;var stream=info.object;var rdev=stream.rdev;var tty=TTY.ttys[rdev];if(tty&&tty.output&&tty.output.length){has=true}})}catch(e){}out=oldOut;err=oldErr;if(has){warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.\")}}function exit(status,implicit){EXITSTATUS=status;checkUnflushedContent();if(keepRuntimeAlive()&&!implicit){var msg=\"program exited (with status: \"+status+\"), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)\";readyPromiseReject(msg);err(msg)}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return FaustModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = FaustModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return FaustModule; });\nelse if (typeof exports === 'object')\n  exports[\"FaustModule\"] = FaustModule;\n", "/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "import FaustModule from \"../libfaust-wasm/libfaust-wasm\";\r\nimport wasmBinary from \"../libfaust-wasm/libfaust-wasm.wasm\";\r\nimport dataBinary from \"../libfaust-wasm/libfaust-wasm.data\";\r\n\r\n/**\r\n * Instantiate `FaustModule` using bundled binaries. Module constructor and files can be overriden.\r\n */\r\nconst instantiateFaustModule = async (FaustModuleIn = FaustModule, dataBinaryIn = dataBinary, wasmBinaryIn = wasmBinary) => {\r\n    const faustModule = await FaustModuleIn({\r\n        wasmBinary: wasmBinaryIn,\r\n        getPreloadedPackage: (remotePackageName: string, remotePackageSize: number) => {\r\n            if (remotePackageName === \"libfaust-wasm.data\") return dataBinaryIn.buffer;\r\n            return new ArrayBuffer(0);\r\n        }\r\n    });\r\n    return faustModule;\r\n};\r\n\r\nexport default instantiateFaustModule;\r\n", "import type FaustWasmInstantiator from \"./FaustWasmInstantiator\";\nimport type { FaustBaseWebAudioDsp, FaustWebAudioDspVoice, FaustMonoWebAudioDsp, FaustPolyWebAudioDsp } from \"./FaustWebAudioDsp\";\nimport type { AudioParamDescriptor, AudioWorkletGlobalScope, LooseFaustDspFactory, FaustDspMeta, FaustUIItem } from \"./types\";\n\n/**\n * Injected in the string to be compiled on AudioWorkletProcessor side\n */\nexport interface FaustData {\n    dspName: string;\n    dspMeta: FaustDspMeta;\n    poly: boolean;\n    effectMeta?: FaustDspMeta;\n};\nexport interface FaustAudioWorkletProcessorDependencies<Poly extends boolean = false> {\n    FaustBaseWebAudioDsp: typeof FaustBaseWebAudioDsp;\n    FaustMonoWebAudioDsp: Poly extends true ? undefined : typeof FaustMonoWebAudioDsp;\n    FaustPolyWebAudioDsp: Poly extends true ? typeof FaustPolyWebAudioDsp : undefined;\n    FaustWebAudioDspVoice: Poly extends true ? undefined : typeof FaustWebAudioDspVoice;\n    FaustWasmInstantiator: typeof FaustWasmInstantiator;\n}\nexport interface FaustAudioWorkletNodeOptions<Poly extends boolean = false> extends AudioWorkletNodeOptions {\n    processorOptions: Poly extends true ? FaustPolyAudioWorkletProcessorOptions : FaustMonoAudioWorkletProcessorOptions;\n}\n\nexport interface FaustMonoAudioWorkletNodeOptions extends AudioWorkletNodeOptions {\n    processorOptions: FaustMonoAudioWorkletProcessorOptions;\n}\n\nexport interface FaustPolyAudioWorkletNodeOptions extends AudioWorkletNodeOptions {\n    processorOptions: FaustPolyAudioWorkletProcessorOptions;\n}\n\nexport interface FaustAudioWorkletProcessorOptions {\n    name: string;\n    sampleSize: number;\n}\nexport interface FaustMonoAudioWorkletProcessorOptions extends FaustAudioWorkletProcessorOptions {\n    factory: LooseFaustDspFactory;\n}\nexport interface FaustPolyAudioWorkletProcessorOptions extends FaustAudioWorkletProcessorOptions {\n    voiceFactory: LooseFaustDspFactory;\n    mixerModule: WebAssembly.Module;\n    voices: number;\n    effectFactory?: LooseFaustDspFactory;\n}\n\n\n// Dynamic AudioWorkletProcessor code generator\nconst getFaustAudioWorkletProcessor = <Poly extends boolean = false>(dependencies: FaustAudioWorkletProcessorDependencies<Poly>, faustData: FaustData) => {\n    const { registerProcessor, AudioWorkletProcessor, sampleRate } = globalThis as unknown as AudioWorkletGlobalScope;\n\n    const {\n        FaustBaseWebAudioDsp,\n        FaustWasmInstantiator\n    } = dependencies;\n\n    const {\n        dspName,\n        dspMeta,\n        effectMeta,\n        poly\n    } = faustData;\n\n    /**\n     * Base class for Monophonic and Polyphonic AudioWorkletProcessor\n     */\n    class FaustAudioWorkletProcessor<Poly extends boolean = false> extends AudioWorkletProcessor {\n\n        // Use ! syntax when the field is not defined in the constructor\n        protected fDSPCode!: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp;\n\n        constructor(options: FaustAudioWorkletNodeOptions<Poly>) {\n            super(options);\n\n            // Setup port message handling\n            this.port.onmessage = (e: MessageEvent) => this.handleMessageAux(e);\n        }\n\n        static get parameterDescriptors() {\n            const params = [] as AudioParamDescriptor[];\n            // Analyse voice JSON to generate AudioParam parameters\n            const callback = (item: FaustUIItem) => {\n                if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n                    if (!poly || (!item.address.endsWith(\"/gate\") && !item.address.endsWith(\"/freq\") && !item.address.endsWith(\"/gain\"))) {\n                        params.push({ name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 });\n                    }\n                } else if (item.type === \"button\" || item.type === \"checkbox\") {\n                    if (!poly || (!item.address.endsWith(\"/gate\") && !item.address.endsWith(\"/freq\") && !item.address.endsWith(\"/gain\"))) {\n                        params.push({ name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 });\n                    }\n                }\n            }\n            FaustBaseWebAudioDsp.parseUI(dspMeta.ui, callback);\n            // Analyse effect JSON to generate AudioParam parameters\n            if (effectMeta) FaustBaseWebAudioDsp.parseUI(effectMeta.ui, callback);\n            return params;\n        }\n\n        process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key: string]: Float32Array }) {\n\n            // Update controls (possibly needed for sample accurate control)\n            // for (const path in parameters) {\n            //     const paramArray = parameters[path];\n            //     this.fDSPCode.setParamValue(path, paramArray[0]);\n            // }\n\n            return this.fDSPCode.compute(inputs[0], outputs[0]);\n        }\n\n        protected handleMessageAux(e: MessageEvent) { // use arrow function for binding\n            const msg = e.data;\n            console.log('asasdas', this, e)\n\n            switch (msg.type) {\n                // Generic MIDI message\n                case \"midi\": this.midiMessage(msg.data, msg.timestamp); break;\n                // Typed MIDI message\n                case \"ctrlChange\": this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"pitchWheel\": this.pitchWheel(msg.data[0], msg.data[1]); break;\n                // Generic data message\n                case \"param\": this.setParamValue(msg.data.path, msg.data.value); break;\n                // Plot handler set on demand\n                case \"setPlotHandler\": {\n                    if (msg.data) {\n                        this.fDSPCode.setPlotHandler((output, index, events) => this.port.postMessage({ type: \"plot\", value: output, index: index, events: events }));\n                    } else {\n                        this.fDSPCode.setPlotHandler(null);\n                    }\n                    break;\n                }\n\n                case \"start\": {\n                    this.fDSPCode.start();\n                    break;\n                }\n\n                case \"stop\": {\n                    this.fDSPCode.stop();\n                    break;\n                }\n\n                case \"destroy\": {\n                    this.port.close();\n                    this.fDSPCode.destroy();\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n\n        protected setParamValue(path: string, value: number) {\n            this.fDSPCode.setParamValue(path, value);\n        }\n\n        protected midiMessage(data: number[] | Uint8Array, timestamp: number = 0) {\n            this.fDSPCode.midiMessage(data);\n        }\n\n        protected ctrlChange(channel: number, ctrl: number, value: number) {\n            this.fDSPCode.ctrlChange(channel, ctrl, value);\n        }\n\n        protected pitchWheel(channel: number, wheel: number) {\n            this.fDSPCode.pitchWheel(channel, wheel);\n        }\n    }\n\n    /**\n     * Monophonic AudioWorkletProcessor\n     */\n    class FaustMonoAudioWorkletProcessor extends FaustAudioWorkletProcessor<false> {\n\n        constructor(options: FaustAudioWorkletNodeOptions) {\n            super(options);\n            const { FaustMonoWebAudioDsp: FaustWebAudioMonoDSP } = dependencies as FaustAudioWorkletProcessorDependencies<false>;\n            const { factory, sampleSize } = options.processorOptions;\n\n            const instance = FaustWasmInstantiator.createSyncMonoDSPInstance(factory);\n            // Create Monophonic DSP\n            this.fDSPCode = new FaustWebAudioMonoDSP(instance, sampleRate, sampleSize, 128);\n\n            // Setup output handler\n            this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\n\n            this.fDSPCode.start();\n        }\n    }\n\n    /**\n     * Polyphonic AudioWorkletProcessor\n     */\n    class FaustPolyAudioWorkletProcessor extends FaustAudioWorkletProcessor<true> {\n\n        constructor(options: FaustPolyAudioWorkletNodeOptions) {\n            super(options);\n            const { FaustPolyWebAudioDsp: FaustWebAudioPolyDSP } = dependencies as FaustAudioWorkletProcessorDependencies<true>;\n\n            const { voiceFactory, mixerModule, voices, effectFactory, sampleSize } = options.processorOptions;\n\n            const instance = FaustWasmInstantiator.createSyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory);\n            // Create Polyphonic DSP\n            this.fDSPCode = new FaustWebAudioPolyDSP(instance, sampleRate, sampleSize, 128, this);\n\n            // Setup port message handling\n            this.port.onmessage = (e: MessageEvent) => this.handleMessageAux(e);\n\n            // Setup output handler\n            this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\n\n            this.fDSPCode.start();\n        }\n\n        getCurrentTime() {\n            /* @ts-ignore */\n            // console.log(currentTime);\n            /* @ts-ignore */\n            return currentTime;\n        }\n\n        getCurrentFrame() {\n            /* @ts-ignore */\n            return currentFrame;\n        }\n\n        getSampleRate() {\n            /* @ts-ignore */\n            return sampleRate;\n        }\n\n        protected midiMessage(data: number[] | Uint8Array, timestamp: number = 0) {\n            console.log('MIDI', timestamp, this.fDSPCode.keyOn, this.fDSPCode.keyOn.toString());\n            const cmd = data[0] >> 4;\n            const channel = data[0] & 0xf;\n            const data1 = data[1];\n            const data2 = data[2];\n            if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyOff(channel, data1, data2, timestamp);\n            else if (cmd === 9) this.keyOn(channel, data1, data2, timestamp);\n            else super.midiMessage(data);\n        }\n\n        protected handleMessageAux = (e: MessageEvent) => { // use arrow function for binding\n            const msg = e.data;\n            switch (msg.type) {\n                case \"keyOn\": this.keyOn(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"keyOff\": this.keyOff(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"scheduledEvent\": this.fDSPCode.scheduleEvent(msg.data); break;\n                default:\n                    super.handleMessageAux(e);\n                    break;\n            }\n        }\n\n        // Public API\n        keyOn(channel: number, pitch: number, velocity: number, timestamp: number = 0) {\n            this.fDSPCode.keyOn(channel, pitch, velocity, timestamp);\n        }\n\n        keyOff(channel: number, pitch: number, velocity: number, timestamp: number = 0) {\n            this.fDSPCode.keyOff(channel, pitch, velocity, timestamp);\n        }\n\n        allNotesOff(hard: boolean) {\n            this.fDSPCode.allNotesOff(hard);\n        }\n    }\n\n    try {\n        // Synchronously compile and instantiate the wasm module\n        if (poly) {\n            registerProcessor(dspName || \"mydsp_poly\", FaustPolyAudioWorkletProcessor);\n        } else {\n            registerProcessor(dspName || \"mydsp\", FaustMonoAudioWorkletProcessor);\n        }\n    } catch (error) {\n        console.warn(error);\n    }\n}\n\nexport default getFaustAudioWorkletProcessor;\n", "import { sha256 } from \"js-sha256\";\nimport type { ILibFaust } from \"./LibFaust\";\nimport type { FaustDspFactory, IntVector } from \"./types\";\n\nexport interface IFaustCompiler {\n    /**\n     * Gives the Faust compiler version.\n     * @return a version string\n     */\n    version(): string;\n\n    /**\n     * Gives the last compilation error.\n     * @return an error string\n     */\n    getErrorMessage(): string;\n\n    /**\n     * Create a wasm factory from Faust code i.e. wasm compiled code, to be used to create monophonic instances. \n     * This function is running asynchronously.\n     *\n     * @param name - an arbitrary name for the Faust factory\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns returns the wasm factory\n     */\n    createMonoDSPFactory(name: string, code: string, args: string): Promise<FaustDspFactory | null>;\n\n    /**\n     * Create a wasm factory from Faust code i.e. wasm compiled code, to be used to create polyphonic instances. \n     * This function is running asynchronously.\n     *\n     * @param name - an arbitrary name for the Faust factory\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns returns the wasm factory\n     */\n    createPolyDSPFactory(name: string, code: string, args: string): Promise<FaustDspFactory | null>;\n\n    /**\n     * Delete a dsp factory.\n     *\n     * @param factory - the factory to be deleted\n     */\n    deleteDSPFactory(factory: FaustDspFactory): void;\n\n    /**\n     * Expand Faust code i.e. linearize included libraries.\n     *\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns returns the expanded dsp code\n     */\n    expandDSP(code: string, args: string): string | null;\n\n    /**\n     * Generates auxiliary files from Faust code. The output depends on the compiler options.\n     *\n     * @param name - an arbitrary name for the Faust module\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns whether the generation actually succeded\n     */\n    generateAuxFiles(name: string, code: string, args: string): boolean;\n\n    /**\n     * Delete all factories.\n     */\n    deleteAllDSPFactories(): void;\n\n    fs(): typeof FS;\n\n    getAsyncInternalMixerModule(isDouble?: boolean): Promise<{ mixerBuffer: Uint8Array; mixerModule: WebAssembly.Module }>;\n    getSyncInternalMixerModule(isDouble?: boolean): { mixerBuffer: Uint8Array; mixerModule: WebAssembly.Module };\n}\n\nclass FaustCompiler implements IFaustCompiler {\n    private fLibFaust: ILibFaust;\n    private fErrorMessage: string;\n    private static gFactories: Map<string, FaustDspFactory> = new Map<string, FaustDspFactory>();\n    private mixer32Buffer!: Uint8Array;\n    private mixer64Buffer!: Uint8Array;\n    private mixer32Module!: WebAssembly.Module;\n    private mixer64Module!: WebAssembly.Module;\n\n    constructor(libFaust: ILibFaust) {\n        this.fLibFaust = libFaust;\n        this.fErrorMessage = \"\";\n    }\n    private intVec2intArray(vec: IntVector) {\n        const size = vec.size();\n        const ui8Code = new Uint8Array(size);\n        for (let i = 0; i < size; i++) {\n            ui8Code[i] = vec.get(i);\n        }\n        return ui8Code;\n    }\n    private async createDSPFactory(name: string, code: string, args: string, poly: boolean) {\n        // Cleanup the cache\n        if (FaustCompiler.gFactories.size > 10) {\n            FaustCompiler.gFactories.clear();\n        }\n\n        // If code is already compiled, return the cached factory\n        let shaKey = sha256(name + code + args + (poly ? \"poly\" : \"mono\"));\n        if (FaustCompiler.gFactories.has(shaKey)) {\n            return FaustCompiler.gFactories.get(shaKey) || null;\n        } else {\n            try {\n                // Can possibly raise a C++ exception catched by the second catch()\n                const faustWasm = this.fLibFaust.createDSPFactory(name, code, args, !poly);\n                try {\n                    const code = this.intVec2intArray(faustWasm.data);\n                    faustWasm.data.delete();\n                    const module = await WebAssembly.compile(code);\n                    const factory = { cfactory: faustWasm.cfactory, code, module, json: faustWasm.json, poly }\n                    // Factory C++ side can be deallocated immediately\n                    this.deleteDSPFactory(factory);\n                    // Keep the compiled factory in the cache\n                    FaustCompiler.gFactories.set(shaKey, factory);\n                    return factory;\n                } catch (e) {\n                    console.error(e);\n                    return null;\n                }\n            } catch {\n                this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n                console.error(`=> exception raised while running createDSPFactory: ${this.fErrorMessage}`);\n                this.fLibFaust.cleanupAfterException();\n                return null;\n            }\n        }\n    }\n    version() {\n        return this.fLibFaust.version();\n    }\n    getErrorMessage() {\n        return this.fErrorMessage;\n    }\n    async createMonoDSPFactory(name: string, code: string, args: string) {\n        return this.createDSPFactory(name, code, args, false);\n    }\n\n    async createPolyDSPFactory(name: string, code: string, args: string) {\n        return this.createDSPFactory(name, code, args, true);\n    }\n    deleteDSPFactory(factory: FaustDspFactory) {\n        this.fLibFaust.deleteDSPFactory(factory.cfactory);\n        factory.cfactory = 0;\n    }\n    expandDSP(code: string, args: string) {\n        try {\n            return this.fLibFaust.expandDSP(\"FaustDSP\", code, args);\n        } catch {\n            this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n            console.error(`=> exception raised while running expandDSP: ${this.fErrorMessage}`);\n            this.fLibFaust.cleanupAfterException();\n            return null;\n        }\n    }\n    generateAuxFiles(name: string, code: string, args: string) {\n        try {\n            return this.fLibFaust.generateAuxFiles(name, code, args);\n        } catch {\n            this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n            console.error(`=> exception raised while running generateAuxFiles: ${this.fErrorMessage}`);\n            this.fLibFaust.cleanupAfterException();\n            return false;\n        }\n    }\n    deleteAllDSPFactories(): void {\n        this.fLibFaust.deleteAllDSPFactories();\n    }\n    fs() {\n        return this.fLibFaust.fs();\n    }\n    async getAsyncInternalMixerModule(isDouble = false) {\n        const bufferKey = isDouble ? \"mixer64Buffer\" : \"mixer32Buffer\";\n        const moduleKey = isDouble ? \"mixer64Module\" : \"mixer32Module\";\n        if (this[moduleKey]) return { mixerBuffer: this[bufferKey], mixerModule: this[moduleKey] };\n        const path = isDouble ? \"/usr/rsrc/mixer64.wasm\" : \"/usr/rsrc/mixer32.wasm\";\n        const mixerBuffer = this.fs().readFile(path, { encoding: \"binary\" });\n        this[bufferKey] = mixerBuffer;\n        // Compile mixer\n        const mixerModule = await WebAssembly.compile(mixerBuffer);\n        this[moduleKey] = mixerModule;\n        return { mixerBuffer, mixerModule };\n    }\n    getSyncInternalMixerModule(isDouble = false) {\n        const bufferKey = isDouble ? \"mixer64Buffer\" : \"mixer32Buffer\";\n        const moduleKey = isDouble ? \"mixer64Module\" : \"mixer32Module\";\n        if (this[moduleKey]) return { mixerBuffer: this[bufferKey], mixerModule: this[moduleKey] };\n        const path = isDouble ? \"/usr/rsrc/mixer64.wasm\" : \"/usr/rsrc/mixer32.wasm\";\n        const mixerBuffer = this.fs().readFile(path, { encoding: \"binary\" });\n        this[bufferKey] = mixerBuffer;\n        // Compile mixer\n        const mixerModule = new WebAssembly.Module(mixerBuffer);\n        this[moduleKey] = mixerModule;\n        return { mixerBuffer, mixerModule };\n    }\n}\n\nexport default FaustCompiler;\n", "/**\n * The Faust wasm instance interface.\n */\nexport interface IFaustDspInstance {\n    /**\n     * The dsp computation, to be called with successive input/output audio buffers.\n     *\n     * @param $dsp - the DSP pointer\n     * @param count - the audio buffer size in frames\n     * @param $inputs - the input audio buffer as in index in wasm memory\n     * @param $output - the output audio buffer as in index in wasm memory\n     */\n    compute($dsp: number, count: number, $inputs: number, $output: number): void;\n\n    /**\n     * The dsp computation, to be called with successive input/output audio buffers.\n     *\n     * @param $dsp - the DSP pointer\n    //  * @param slice - the audio buffer size in frames\n     * @param $inputs - the input audio buffer as in index in wasm memory\n     * @param $output - the output audio buffer as in index in wasm memory\n     */\n    computeSlice($dsp: number, offset: number, slice: number, $inputs: number, $output: number): void;\n\n    /**\n     * Give the number of inputs of a Faust wasm instance.\n     *\n     * @param $dsp - the DSP pointer\n     */\n    getNumInputs($dsp: number): number;\n\n    /**\n     * Give the number of outputs of a Faust wasm instance.\n     *\n     * @param $dsp - the DSP pointer\n     */\n    getNumOutputs($dsp: number): number;\n\n    /**\n     * Give a parameter current value.\n     *\n     * @param $dsp - the DSP pointer\n     * @param index - the parameter index\n     * @preturn the parameter value\n     */\n    getParamValue($dsp: number, index: number): number;\n\n    /**\n     * Give the Faust wasm instance sample rate.\n     *\n     * @param $dsp - the DSP pointer\n     * @preturn the sample rate\n     */\n    getSampleRate($dsp: number): number;\n\n    /**\n     * Global init, calls the following methods:\n     * - static class 'classInit': static tables initialization\n     * - 'instanceInit': constants and instance state initialization\n     *\n     * @param $dsp - the DSP pointer\n     * @param sampleRate - the sampling rate in Hertz\n     */\n    init($dsp: number, sampleRate: number): void;\n\n    /** Init instance state (delay lines...).\n     *\n     * @param $dsp - the DSP pointer\n     */\n    instanceClear($dsp: number): void;\n\n    /** Init instance constant state.\n     *\n     * @param $dsp - the DSP pointer\n     * @param sampleRate - the sampling rate in Hertz\n     */\n    instanceConstants($dsp: number, sampleRate: number): void;\n\n    /** Init instance state.\n     *\n     * @param $dsp - the DSP pointer\n     * @param sampleRate - the sampling rate in Hertz\n     */\n    instanceInit($dsp: number, sampleRate: number): void;\n\n    /** Init default control parameters values.\n     *\n     * @param $dsp - the DSP pointer\n     */\n    instanceResetUserInterface($dsp: number): void;\n\n    /**\n     * Set a parameter current value.\n     *\n     * @param $dsp - the DSP pointer\n     * @param index - the parameter index\n     * @param value - the parameter value\n     */\n    setParamValue($dsp: number, index: number, value: number): void;\n}\n\n/**\n * Mixer used in polyphonic mode.\n */\nexport interface IFaustMixerInstance {\n    clearOutput(bufferSize: number, chans: number, $outputs: number): void;\n    mixCheckVoice(bufferSize: number, chans: number, $inputs: number, $outputs: number): number;\n    fadeOut(bufferSize: number, chans: number, $outputs: number): void;\n}\n\n/**\n * Monophonic instance.\n */\nexport interface FaustMonoDspInstance {\n    memory: WebAssembly.Memory;\n    api: IFaustDspInstance;\n    json: string;\n}\n\n/**\n * Polyphonic instance.\n */\nexport interface FaustPolyDspInstance {\n    memory: WebAssembly.Memory;\n    voices: number;\n    voiceAPI: IFaustDspInstance;\n    effectAPI?: IFaustDspInstance;\n    mixerAPI: IFaustMixerInstance;\n    voiceJSON: string;\n    effectJSON?: string;\n}\n\nclass FaustDspInstance implements IFaustDspInstance {\n    private readonly fExports: IFaustDspInstance;\n\n    constructor(exports: IFaustDspInstance) { this.fExports = exports; }\n\n    compute($dsp: number, count: number, $input: number, $output: number) { this.fExports.compute($dsp, count, $input, $output); }\n    computeSlice($dsp: number, offset: number, slice: number, $input: number, $output: number) { this.fExports.computeSlice($dsp, offset, slice, $input, $output); }\n    getNumInputs($dsp: number) { return this.fExports.getNumInputs($dsp); }\n    getNumOutputs($dsp: number) { return this.fExports.getNumOutputs($dsp); }\n    getParamValue($dsp: number, index: number) { return this.fExports.getParamValue($dsp, index); }\n    getSampleRate($dsp: number) { return this.fExports.getSampleRate($dsp); }\n    init($dsp: number, sampleRate: number) { this.fExports.init($dsp, sampleRate); }\n    instanceClear($dsp: number) { this.fExports.instanceClear($dsp); }\n    instanceConstants($dsp: number, sampleRate: number) { this.fExports.instanceConstants($dsp, sampleRate); }\n    instanceInit($dsp: number, sampleRate: number) { this.fExports.instanceInit($dsp, sampleRate); }\n    instanceResetUserInterface($dsp: number) { this.fExports.instanceResetUserInterface($dsp); }\n    setParamValue($dsp: number, index: number, value: number) { this.fExports.setParamValue($dsp, index, value); }\n}\n\nexport default FaustDspInstance;\n", "import FaustDspInstance, { FaustMonoDspInstance, FaustPolyDspInstance, IFaustDspInstance, IFaustMixerInstance } from \"./FaustDspInstance\";\nimport type { FaustDspFactory, FaustDspMeta, LooseFaustDspFactory } from \"./types\";\n\nclass FaustWasmInstantiator {\n    private static createWasmImport(memory?: WebAssembly.Memory) {\n        return {\n            env: {\n                memory: memory || new WebAssembly.Memory({ initial: 100 }),\n                memoryBase: 0,\n                tableBase: 0,\n                // Integer version\n                _abs: Math.abs,\n                // Float version\n                _acosf: Math.acos, _asinf: Math.asin, _atanf: Math.atan, _atan2f: Math.atan2,\n                _ceilf: Math.ceil, _cosf: Math.cos, _expf: Math.exp, _floorf: Math.floor,\n                _fmodf: (x: number, y: number) => x % y,\n                _logf: Math.log, _log10f: Math.log10, _max_f: Math.max, _min_f: Math.min,\n                _remainderf: (x: number, y: number) => x - Math.round(x / y) * y,\n                _powf: Math.pow, _roundf: Math.fround, _sinf: Math.sin, _sqrtf: Math.sqrt, _tanf: Math.tan,\n                _acoshf: Math.acosh, _asinhf: Math.asinh, _atanhf: Math.atanh,\n                _coshf: Math.cosh, _sinhf: Math.sinh, _tanhf: Math.tanh,\n                _isnanf: Number.isNaN, _isinff: (x: number) => !isFinite(x),\n                _copysignf: (x: number, y: number) => (Math.sign(x) === Math.sign(y) ? x : -x),\n        \n                // Double version\n                _acos: Math.acos, _asin: Math.asin, _atan: Math.atan, _atan2: Math.atan2,\n                _ceil: Math.ceil, _cos: Math.cos, _exp: Math.exp, _floor: Math.floor,\n                _fmod: (x: number, y: number) => x % y,\n                _log: Math.log, _log10: Math.log10, _max_: Math.max, _min_: Math.min,\n                _remainder: (x: number, y: number) => x - Math.round(x / y) * y,\n                _pow: Math.pow, _round: Math.fround, _sin: Math.sin, _sqrt: Math.sqrt, _tan: Math.tan,\n                _acosh: Math.acosh, _asinh: Math.asinh, _atanh: Math.atanh,\n                _cosh: Math.cosh, _sinh: Math.sinh, _tanh: Math.tanh,\n                _isnan: Number.isNaN, _isinf: (x: number) => !isFinite(x),\n                _copysign: (x: number, y: number) => (Math.sign(x) === Math.sign(y) ? x : -x),\n        \n                table: new WebAssembly.Table({ initial: 0, element: \"anyfunc\" })\n            }\n        };\n    }\n    private static createWasmMemory(voicesIn: number, sampleSize: number, dspMeta: FaustDspMeta, effectMeta: FaustDspMeta, bufferSize: number) {\n        // Hack : at least 4 voices (to avoid weird wasm memory bug?)\n        const voices = Math.max(4, voicesIn);\n        // Memory allocator\n        const ptrSize = sampleSize; // Done on wast/wasm backend side\n        const pow2limit = (x: number) => {\n            let n = 65536; // Minimum = 64 kB\n            while (n < x) { n *= 2; }\n            return n;\n        };\n        const effectSize = effectMeta ? effectMeta.size : 0;\n        let memorySize = pow2limit(\n            effectSize\n            + dspMeta.size * voices\n            + (dspMeta.inputs + dspMeta.outputs * 2)\n            * (ptrSize + bufferSize * sampleSize)\n        ) / 65536;\n        memorySize = Math.max(2, memorySize); // At least 2\n        return new WebAssembly.Memory({ initial: memorySize, maximum: memorySize });\n    };\n    private static createMonoDSPInstanceAux(instance: WebAssembly.Instance, json: string) {\n        const functions = instance.exports as IFaustDspInstance & WebAssembly.Exports;\n        const api = new FaustDspInstance(functions);\n        const memory: any = instance.exports.memory;\n        return { memory, api, json } as FaustMonoDspInstance;\n    }\n    private static createMemoryAux(voices: number, voiceFactory: LooseFaustDspFactory, effectFactory?: LooseFaustDspFactory) {\n        // Parse JSON to get 'size' and 'inputs/outputs' infos\n        const voiceMeta: FaustDspMeta = JSON.parse(voiceFactory.json);\n        const effectMeta: FaustDspMeta = (effectFactory && effectFactory.json) ? JSON.parse(effectFactory.json) : null;\n        const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n        // Memory will be shared by voice, mixer and (possibly) effect instances\n        return this.createWasmMemory(voices, sampleSize, voiceMeta, effectMeta, 8192);\n    }\n    private static createMixerAux(mixerModule: WebAssembly.Module, memory: WebAssembly.Memory) {\n        // Create mixer instance\n        const mixerImport = {\n            imports: { print: console.log },\n            memory: { memory }\n        };\n        const mixerInstance = new WebAssembly.Instance(mixerModule, mixerImport);\n        const mixerFunctions = mixerInstance.exports as IFaustMixerInstance & WebAssembly.Exports;\n        return mixerFunctions;\n    }\n    // Public API\n    static async loadDSPFactory(wasmPath: string, jsonPath: string) {\n        const wasmFile = await fetch(wasmPath);\n        if (!wasmFile.ok) {\n            console.error(`=> exception raised while running loadDSPFactory, file not found: ${wasmPath}`);\n            return null;\n        }\n        try {\n            const wasmBuffer = await wasmFile.arrayBuffer();\n            const module = await WebAssembly.compile(wasmBuffer);\n            const jsonFile = await fetch(jsonPath);\n            const json = await jsonFile.text();\n            const meta: FaustDspMeta = JSON.parse(json);\n            const cOptions = meta.compile_options;\n            const poly = cOptions.indexOf('wasm-e') !== -1;\n            return { cfactory: 0, code: new Uint8Array(wasmBuffer), module, json, poly } as FaustDspFactory;\n        } catch (e) {\n            console.error(`=> exception raised while running loadDSPFactory: ${e}`);\n            return null;\n        }\n    }\n    \n    static async loadDSPMixer(mixerPath: string, fs?: typeof FS) {\n        try {\n            let mixerBuffer = null;\n            if (fs) {\n                mixerBuffer = fs.readFile(mixerPath, { encoding: \"binary\" });\n            } else {\n                const mixerFile = await fetch(mixerPath);\n                mixerBuffer = await mixerFile.arrayBuffer();\n            }\n            // Compile mixer\n            return WebAssembly.compile(mixerBuffer);\n        } catch (e) {\n            console.error(`=> exception raised while running loadMixer: ${e}`);\n            return null;\n        }\n    }\n    \n    static async createAsyncMonoDSPInstance(factory: LooseFaustDspFactory) {\n        const instance = await WebAssembly.instantiate(factory.module, this.createWasmImport());\n        return this.createMonoDSPInstanceAux(instance, factory.json);\n    }\n    \n    static createSyncMonoDSPInstance(factory: LooseFaustDspFactory) {\n        const instance = new WebAssembly.Instance(factory.module, this.createWasmImport());\n        return this.createMonoDSPInstanceAux(instance, factory.json);\n    }\n    \n    static async createAsyncPolyDSPInstance(voiceFactory: LooseFaustDspFactory, mixerModule: WebAssembly.Module, voices: number, effectFactory?: LooseFaustDspFactory): Promise<FaustPolyDspInstance> {\n        const memory = this.createMemoryAux(voices, voiceFactory, effectFactory);\n        // Create voice \n        const voiceInstance = await WebAssembly.instantiate(voiceFactory.module, this.createWasmImport(memory));\n        const voiceFunctions = voiceInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n        const voiceAPI = new FaustDspInstance(voiceFunctions);\n        // Create mixer\n        const mixerAPI = this.createMixerAux(mixerModule, memory);\n    \n        // Possibly create effect instance \n        if (effectFactory) {\n            const effectInstance = await WebAssembly.instantiate(effectFactory.module, this.createWasmImport(memory));\n            const effectFunctions = effectInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n            const effectAPI = new FaustDspInstance(effectFunctions);\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                effectAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json,\n                effectJSON: effectFactory.json\n            };\n        } else {\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json\n            };\n        }\n    }\n    \n    static createSyncPolyDSPInstance(voiceFactory: LooseFaustDspFactory, mixerModule: WebAssembly.Module, voices: number, effectFactory?: LooseFaustDspFactory): FaustPolyDspInstance {\n        const memory = this.createMemoryAux(voices, voiceFactory, effectFactory);\n        // Create voice \n        const voiceInstance = new WebAssembly.Instance(voiceFactory.module, this.createWasmImport(memory));\n        const voiceFunctions = voiceInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n        const voiceAPI = new FaustDspInstance(voiceFunctions);\n        // Create mixer\n        const mixerAPI = this.createMixerAux(mixerModule, memory);\n    \n        // Possibly create effect instance \n        if (effectFactory) {\n            const effectInstance = new WebAssembly.Instance(effectFactory.module, this.createWasmImport(memory));\n            const effectFunctions = effectInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n            const effectAPI = new FaustDspInstance(effectFunctions);\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                effectAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json,\n                effectJSON: effectFactory.json\n            };\n        } else {\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json\n            };\n        }\n    }\n}\n\nexport default FaustWasmInstantiator;\n", "import type { IFaustMonoWebAudioDsp } from \"./FaustWebAudioDsp\";\n\n/**\n *  For offline rendering.\n */\nexport interface IFaustOfflineProcessor {\n    /**\n     * Render frames in an array.\n     *\n     * @param inputs - input signal\n     * @param length - the number of frames to render (default: bufferSize)\n     * @param onUpdate - a callback after each buffer calculated, with an argument \"current sample\"\n     * @return an array of Float32Array with the rendered frames\n     */\n    render(inputs?: Float32Array[], length?: number, onUpdate?: (sample: number) => any): Float32Array[];\n}\n\nclass FaustOfflineProcessor implements IFaustOfflineProcessor {\n\n    private fDSPCode: IFaustMonoWebAudioDsp;\n    private fBufferSize: number;\n    private fInputs: Float32Array[];\n    private fOutputs: Float32Array[];\n\n    constructor(instance: IFaustMonoWebAudioDsp, bufferSize: number) {\n        this.fDSPCode = instance;\n        this.fBufferSize = bufferSize;\n        this.fInputs = new Array(this.fDSPCode.getNumInputs()).fill(null).map(() => new Float32Array(bufferSize));\n        this.fOutputs = new Array(this.fDSPCode.getNumOutputs()).fill(null).map(() => new Float32Array(bufferSize));\n    }\n\n    render(inputs: Float32Array[] = [], length = this.fBufferSize, onUpdate?: (sample: number) => any): Float32Array[] {\n        let l = 0;\n        const outputs = new Array(this.fDSPCode.getNumOutputs()).fill(null).map(() => new Float32Array(length));\n        // The node has to be started before rendering\n        this.fDSPCode.start();\n        while (l < length) {\n            const sliceLength = Math.min(length - l, this.fBufferSize);\n            for (let i = 0; i < this.fDSPCode.getNumInputs(); i++) {\n                let input: Float32Array;\n                if (inputs[i]) {\n                    if (inputs[i].length <= l) {\n                        input = new Float32Array(sliceLength);\n                    } else if (inputs[i].length > l + sliceLength) {\n                        input = inputs[i].subarray(l, l + sliceLength);\n                    } else {\n                        input = inputs[i].subarray(l, inputs[i].length);\n                    }\n                } else {\n                    input = new Float32Array(sliceLength);\n                }\n                this.fInputs[i] = input;\n            }\n            this.fDSPCode.compute(this.fInputs, this.fOutputs);\n            for (let i = 0; i < this.fDSPCode.getNumOutputs(); i++) {\n                const output = this.fOutputs[i];\n                if (sliceLength < this.fBufferSize) {\n                    outputs[i].set(output.subarray(0, sliceLength), l);\n                } else {\n                    outputs[i].set(output, l);\n                }\n            }\n            l += this.fBufferSize;\n            onUpdate?.(l);\n        }\n        // The node can be stopped after rendering\n        this.fDSPCode.stop();\n        return outputs;\n    }\n}\n\nexport default FaustOfflineProcessor;\n", "import type FaustCompiler from \"./FaustCompiler\";\n\ninterface IFaustSvgDiagrams {\n    /**\n     * Generates auxiliary files from Faust code. The output depends on the compiler options.\n     *\n     * @param name - the DSP's name\n     * @param code - Faust code\n     * @param args - compilation args\n     * @returns the svg diagrams as a filename - svg string map\n     */\n    from(name: string, code: string, args: string): Record<string, string>;\n}\n\nclass FaustSvgDiagrams implements IFaustSvgDiagrams {\n    private compiler: FaustCompiler;\n\n    constructor(compiler: FaustCompiler) {\n        this.compiler = compiler;\n    }\n    \n    from(name: string, code: string, args: string) {\n        const fs = this.compiler.fs();\n        try {\n            const files: string[] = fs.readdir(`/${name}-svg/`);\n            files.filter(file => file !== \".\" && file !== \"..\").forEach(file => fs.unlink(`/${name}-svg/${file}`));\n        } catch {}\n        const success = this.compiler.generateAuxFiles(name, code, `-lang wasm -svg ${args}`);\n        if (!success) throw new Error(this.compiler.getErrorMessage());\n        const svgs: Record<string, string> = {};\n        const files: string[] = fs.readdir(`/${name}-svg/`);\n        files.filter(file => file !== \".\" && file !== \"..\").forEach(file => svgs[file] = fs.readFile(`/${name}-svg/${file}`, { encoding: \"utf8\" }) as string);\n        return svgs;\n    }\n}\n\nexport default FaustSvgDiagrams;\n", "import type { FaustModule, LibFaustWasm, FaustInfoType } from \"./types\";\n\nexport interface ILibFaust extends LibFaustWasm {\n    module(): FaustModule;\n    fs(): typeof FS;\n}\n\nclass LibFaust implements ILibFaust {\n    private fModule: FaustModule;\n    private fCompiler: LibFaustWasm;\n    private fFileSystem: typeof FS;\n\n    constructor(module: FaustModule) {\n        this.fModule = module;\n        this.fCompiler = new module.libFaustWasm();\n        this.fFileSystem = this.fModule.FS;\n    }\n    module() {\n        return this.fModule;\n    }\n    fs() {\n        return this.fFileSystem;\n    }\n    version() {\n        return this.fCompiler.version();\n    }\n    createDSPFactory(name: string, code: string, args: string, useInternalMemory: boolean) {\n        return this.fCompiler.createDSPFactory(name, code, args, useInternalMemory);\n    }\n    deleteDSPFactory(cFactory: number) {\n        return this.fCompiler.deleteDSPFactory(cFactory);\n    }\n    expandDSP(name: string, code: string, args: string) {\n        return this.fCompiler.expandDSP(name, code, args);\n    }\n    generateAuxFiles(name: string, code: string, args: string) {\n        return this.fCompiler.generateAuxFiles(name, code, args);\n    }\n    deleteAllDSPFactories() {\n        return this.fCompiler.deleteAllDSPFactories();\n    }\n    getErrorAfterException() {\n        return this.fCompiler.getErrorAfterException();\n    }\n    cleanupAfterException() {\n        return this.fCompiler.cleanupAfterException();\n    }\n    getInfos(what: FaustInfoType) {\n        return this.fCompiler.getInfos(what);\n    }\n    toString() {\n        return `LibFaust module: ${this.fModule}, compiler: ${this.fCompiler}`;\n    }\n\n}\n\nexport default LibFaust;\n", "export interface WavEncoderOptions {\n    bitDepth: number;\n    float?: boolean;\n    symmetric?: boolean;\n    shared?: boolean;\n    sampleRate: number;\n}\ninterface Format {\n    formatId: number;\n    float: boolean;\n    symmetric: boolean;\n    numberOfChannels: number;\n    sampleRate: number;\n    length: number;\n    bitDepth: number;\n    byteDepth: number;\n}\n\n/**\n * Code from https://github.com/mohayonao/wav-encoder\n */\nclass WavEncoder {\n    static encode(audioBuffer: Float32Array[], options: WavEncoderOptions) {\n        const numberOfChannels = audioBuffer.length;\n        const length = audioBuffer[0].length;\n        const { shared, float } = options;\n        const bitDepth = float ? 32 : ((options.bitDepth | 0) || 16);\n        const byteDepth = bitDepth >> 3;\n        const byteLength = length * numberOfChannels * byteDepth;\n        // eslint-disable-next-line no-undef\n        const AB = shared ? (globalThis.SharedArrayBuffer || globalThis.ArrayBuffer) : globalThis.ArrayBuffer;\n        const ab = new AB((44 + byteLength) * Uint8Array.BYTES_PER_ELEMENT);\n        const dataView = new DataView(ab);\n        const writer = new Writer(dataView);\n        const format: Format = {\n            formatId: float ? 0x0003 : 0x0001,\n            float: !!float,\n            numberOfChannels,\n            sampleRate: options.sampleRate,\n            symmetric: !!options.symmetric,\n            length,\n            bitDepth,\n            byteDepth\n        };\n        this.writeHeader(writer, format);\n        this.writeData(writer, audioBuffer, format);\n        return ab;\n    }\n    private static writeHeader(writer: Writer, format: Format) {\n        const { formatId, sampleRate, bitDepth, numberOfChannels, length, byteDepth } = format;\n        writer.string(\"RIFF\");\n        writer.uint32(writer.dataView.byteLength - 8);\n        writer.string(\"WAVE\");\n        writer.string(\"fmt \");\n        writer.uint32(16);\n        writer.uint16(formatId);\n        writer.uint16(numberOfChannels);\n        writer.uint32(sampleRate);\n        writer.uint32(sampleRate * numberOfChannels * byteDepth);\n        writer.uint16(numberOfChannels * byteDepth);\n        writer.uint16(bitDepth);\n        writer.string(\"data\");\n        writer.uint32(length * numberOfChannels * byteDepth);\n        return writer.pos;\n    }\n    private static writeData(writer: Writer, audioBuffer: Float32Array[], format: Format) {\n        const { bitDepth, float, length, numberOfChannels, symmetric } = format;\n        if (bitDepth === 32 && float) {\n            const { dataView, pos } = writer;\n            const ab = dataView.buffer;\n            const f32View = new Float32Array(ab, pos);\n            if (numberOfChannels === 1) {\n                f32View.set(audioBuffer[0]);\n                return;\n            }\n            for (let ch = 0; ch < numberOfChannels; ch++) {\n                const channel = audioBuffer[ch];\n                for (let i = 0; i < length; i++) {\n                    f32View[i * numberOfChannels + ch] = channel[i];\n                }\n            }\n            return;\n        }\n        const encoderOption = float ? \"f\" : symmetric ? \"s\" : \"\";\n        const methodName = \"pcm\" + bitDepth + encoderOption;\n\n        if (!(writer as any)[methodName]) {\n            throw new TypeError(\"Not supported bit depth: \" + bitDepth);\n        }\n\n        const write: (value: number) => void = (writer as any)[methodName].bind(writer);\n\n        for (let i = 0; i < length; i++) {\n            for (let j = 0; j < numberOfChannels; j++) {\n                write(audioBuffer[j][i]);\n            }\n        }\n    }\n}\n\nclass Writer {\n    pos = 0;\n    dataView: DataView;\n    constructor(dataView: DataView) {\n        this.dataView = dataView;\n    }\n    int16(value: number) {\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    uint16(value: number) {\n        this.dataView.setUint16(this.pos, value, true);\n        this.pos += 2;\n    }\n    uint32(value: number) {\n        this.dataView.setUint32(this.pos, value, true);\n        this.pos += 4;\n    }\n    string(value: string) {\n        for (let i = 0, imax = value.length; i < imax; i++) {\n            this.dataView.setUint8(this.pos++, value.charCodeAt(i));\n        }\n    }\n    pcm8(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = (value * 0.5 + 0.5) * 255;\n        value = Math.round(value) | 0;\n        this.dataView.setUint8(this.pos, value/* , true*/);\n        this.pos += 1;\n    }\n    pcm8s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 128) + 128;\n        value = Math.max(0, Math.min(value, 255));\n        this.dataView.setUint8(this.pos, value/* , true*/);\n        this.pos += 1;\n    }\n    pcm16(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? value * 32768 : value * 32767;\n        value = Math.round(value) | 0;\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    pcm16s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 32768);\n        value = Math.max(-32768, Math.min(value, 32767));\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    pcm24(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? 0x1000000 + value * 8388608 : value * 8388607;\n        value = Math.round(value) | 0;\n\n        const x0 = (value >> 0) & 0xFF;\n        const x1 = (value >> 8) & 0xFF;\n        const x2 = (value >> 16) & 0xFF;\n\n        this.dataView.setUint8(this.pos + 0, x0);\n        this.dataView.setUint8(this.pos + 1, x1);\n        this.dataView.setUint8(this.pos + 2, x2);\n        this.pos += 3;\n    }\n    pcm24s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 8388608);\n        value = Math.max(-8388608, Math.min(value, 8388607));\n\n        const x0 = (value >> 0) & 0xFF;\n        const x1 = (value >> 8) & 0xFF;\n        const x2 = (value >> 16) & 0xFF;\n\n        this.dataView.setUint8(this.pos + 0, x0);\n        this.dataView.setUint8(this.pos + 1, x1);\n        this.dataView.setUint8(this.pos + 2, x2);\n        this.pos += 3;\n    }\n    pcm32(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? value * 2147483648 : value * 2147483647;\n        value = Math.round(value) | 0;\n        this.dataView.setInt32(this.pos, value, true);\n        this.pos += 4;\n    }\n    pcm32s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 2147483648);\n        value = Math.max(-2147483648, Math.min(value, +2147483647));\n        this.dataView.setInt32(this.pos, value, true);\n        this.pos += 4;\n    }\n    pcm32f(value: number) {\n        this.dataView.setFloat32(this.pos, value, true);\n        this.pos += 4;\n    }\n}\n\nexport default WavEncoder;\n", "export interface WavDecoderOptions {\n    symmetric?: boolean;\n    shared?: boolean;\n}\ninterface Format {\n    formatId: number;\n    float: boolean;\n    numberOfChannels: number;\n    sampleRate: number;\n    byteRate: number;\n    blockSize: number;\n    bitDepth: number;\n}\n\n/**\n * Code from https://github.com/mohayonao/wav-decoder\n */\nclass WavDecoder {\n    static decode(buffer: ArrayBuffer, options?: WavDecoderOptions) {\n        const dataView = new DataView(buffer);\n        const reader = new Reader(dataView);\n        if (reader.string(4) !== \"RIFF\") {\n            throw new TypeError(\"Invalid WAV file\");\n        }\n        reader.uint32(); // skip file length\n        if (reader.string(4) !== \"WAVE\") {\n            throw new TypeError(\"Invalid WAV file\");\n        }\n        let format: Format | null = null;\n        let audioData: {\n            numberOfChannels: number;\n            length: number;\n            sampleRate: number;\n            channelData: Float32Array[];\n        } | null = null;\n        do {\n            const chunkType = reader.string(4);\n            const chunkSize = reader.uint32();\n            if (chunkType === \"fmt \") {\n                format = this.decodeFormat(reader, chunkSize);\n            } else if (chunkType === \"data\") {\n                audioData = this.decodeData(reader, chunkSize, format as Format, options || {});\n            } else {\n                reader.skip(chunkSize);\n            }\n        } while (audioData === null);\n        return audioData;\n    }\n    private static decodeFormat(reader: Reader, chunkSize: number) {\n        const formats = {\n            0x0001: \"lpcm\",\n            0x0003: \"lpcm\"\n        };\n        const formatId = reader.uint16();\n        if (!formats.hasOwnProperty(formatId)) {\n            throw new TypeError(\"Unsupported format in WAV file: 0x\" + formatId.toString(16));\n        }\n        const format: Format = {\n            formatId: formatId,\n            float: formatId === 0x0003,\n            numberOfChannels: reader.uint16(),\n            sampleRate: reader.uint32(),\n            byteRate: reader.uint32(),\n            blockSize: reader.uint16(),\n            bitDepth: reader.uint16()\n        };\n        reader.skip(chunkSize - 16);\n        return format;\n    }\n    private static decodeData(reader: Reader, chunkSizeIn: number, format: Format, options: WavDecoderOptions) {\n        const chunkSize = Math.min(chunkSizeIn, reader.remain());\n        const length = Math.floor(chunkSize / format.blockSize);\n        const numberOfChannels = format.numberOfChannels;\n        const sampleRate = format.sampleRate;\n        const channelData: Float32Array[] = new Array(numberOfChannels);\n        for (let ch = 0; ch < numberOfChannels; ch++) {\n            const AB = options.shared ? (globalThis.SharedArrayBuffer || globalThis.ArrayBuffer) : globalThis.ArrayBuffer;\n            const ab = new AB(length * Float32Array.BYTES_PER_ELEMENT);\n            channelData[ch] = new Float32Array(ab);\n        }\n        this.readPCM(reader, channelData, length, format, options);\n        return {\n            numberOfChannels,\n            length,\n            sampleRate,\n            channelData\n        };\n    }\n    private static readPCM(reader: Reader, channelData: Float32Array[], length: number, format: Format, options: WavDecoderOptions) {\n        const bitDepth = format.bitDepth;\n        const decoderOption = format.float ? \"f\" : options.symmetric ? \"s\" : \"\";\n        const methodName = \"pcm\" + bitDepth + decoderOption as `pcm${8 | 16 | 32}${\"f\" | \"s\" | \"\"}`;\n        if (!(reader as any)[methodName]) {\n            throw new TypeError(\"Not supported bit depth: \" + format.bitDepth);\n        }\n        const read: () => number = (reader as any)[methodName].bind(reader);\n        const numberOfChannels = format.numberOfChannels;\n        for (let i = 0; i < length; i++) {\n            for (let ch = 0; ch < numberOfChannels; ch++) {\n                channelData[ch][i] = read();\n            }\n        }\n    }\n}\n\nclass Reader {\n    pos = 0;\n    dataView: DataView;\n    constructor(dataView: DataView) {\n        this.dataView = dataView;\n    }\n    remain() {\n        return this.dataView.byteLength - this.pos;\n    }\n    skip(n: number) {\n        this.pos += n;\n    }\n    uint8() {\n        const data = this.dataView.getUint8(this.pos);\n        this.pos += 1;\n        return data;\n    }\n    int16() {\n        const data = this.dataView.getInt16(this.pos, true);\n        this.pos += 2;\n        return data;\n    }\n    uint16() {\n        const data = this.dataView.getUint16(this.pos, true);\n        this.pos += 2;\n        return data;\n    }\n    uint32() {\n        const data = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return data;\n    }\n    string(n: number) {\n        let data = \"\";\n        for (let i = 0; i < n; i++) {\n            data += String.fromCharCode(this.uint8());\n        }\n        return data;\n    }\n    pcm8() {\n        const data = this.dataView.getUint8(this.pos) - 128;\n        this.pos += 1;\n        return data < 0 ? data / 128 : data / 127;\n    }\n    pcm8s() {\n        const data = this.dataView.getUint8(this.pos) - 127.5;\n        this.pos += 1;\n        return data / 127.5;\n    }\n    pcm16() {\n        const data = this.dataView.getInt16(this.pos, true);\n        this.pos += 2;\n        return data < 0 ? data / 32768 : data / 32767;\n    }\n    pcm16s() {\n        const data = this.dataView.getInt16(this.pos, true);\n        this.pos += 2;\n        return data / 32768;\n    }\n    pcm24() {\n        const x0 = this.dataView.getUint8(this.pos + 0);\n        const x1 = this.dataView.getUint8(this.pos + 1);\n        const x2 = this.dataView.getUint8(this.pos + 2);\n        const xx = (x0 + (x1 << 8) + (x2 << 16));\n\n        const data = xx > 0x800000 ? xx - 0x1000000 : xx;\n        this.pos += 3;\n        return data < 0 ? data / 8388608 : data / 8388607;\n    }\n    pcm24s() {\n        const x0 = this.dataView.getUint8(this.pos + 0);\n        const x1 = this.dataView.getUint8(this.pos + 1);\n        const x2 = this.dataView.getUint8(this.pos + 2);\n        const xx = (x0 + (x1 << 8) + (x2 << 16));\n\n        const data = xx > 0x800000 ? xx - 0x1000000 : xx;\n        this.pos += 3;\n        return data / 8388608;\n    }\n    pcm32() {\n        const data = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return data < 0 ? data / 2147483648 : data / 2147483647;\n    }\n    pcm32s() {\n        const data = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return data / 2147483648;\n    }\n    pcm32f() {\n        const data = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return data;\n    }\n    pcm64f() {\n        const data = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return data;\n    }\n}\n\nexport default WavDecoder;\n", "import type { FaustMonoDspInstance, FaustPolyDspInstance, IFaustDspInstance } from \"./FaustDspInstance\";\nimport type { FaustDspMeta, FaustUIDescriptor, FaustUIGroup, FaustUIInputItem, FaustUIItem } from \"./types\";\n\n// Public API\nexport type OutputParamHandler = (path: string, value: number) => void;\nexport type ComputeHandler = (buffer_size: number) => void;\nexport type PlotHandler = (plotted: Float32Array[], index: number, events?: { type: string; data: any }[]) => void;\nexport type MetadataHandler = (key: string, value: string) => void;\n\n// Implementation API\nexport type UIHandler = (item: FaustUIItem) => void;\n\n/**\n * DSP implementation: mimic the C++ 'dsp' class:\n * - adding MIDI control: metadata are decoded and incoming MIDI messages will control the associated controllers\n * - an output handler can be set to treat produced output controllers (like 'bargraph')\n * - regular controllers are handled using setParamValue/getParamValue\n */\nexport interface IFaustBaseWebAudioDsp {\n    /**\n     * Set the parameter output handler, to  be called in the 'compute' method with output parameters (like bargraph).\n     *\n     * @param handler - the output handler\n     */\n    setOutputParamHandler(handler: OutputParamHandler | null): void;\n\n    /**\n     * Get the parameter output handler.\n     *\n     * @return the current output handler\n     */\n    getOutputParamHandler(): OutputParamHandler | null;\n\n    /**\n     * Set the compute handler, to  be called in the 'compute' method with buffer size.\n     *\n     * @param handler - the compute handler\n     */\n    setComputeHandler(handler: ComputeHandler | null): void;\n\n    /**\n     * Get the compute handler.\n     *\n     * @return the current output handler\n     */\n    getComputeHandler(): ComputeHandler | null;\n\n    /**\n     * Set the plot handler, to  be called in the 'compute' method with various info (see PlotHandler type).\n     *\n     * @param handler - the plot handler\n     */\n    setPlotHandler(handler: PlotHandler | null): void;\n\n    /**\n     * Get the plot handler.\n     *\n     * @return the current plot handler\n     */\n    getPlotHandler(): PlotHandler | null;\n\n    /**\n     * Return instance number of audio inputs.\n     *\n     * @return the instance number of audio inputs\n     */\n    getNumInputs(): number;\n\n    /**\n     * Return instance number of audio outputs.\n     *\n     * @return the instance number of audio outputs\n     */\n    getNumOutputs(): number;\n\n    /**\n     * DSP instance computation, to be called with successive input/output audio buffers, using their size.\n     *\n     * @param inputs - the input audio buffers\n     * @param outputs - the output audio buffers\n     */\n    compute(inputs: Float32Array[], outputs: Float32Array[]): boolean;\n\n    /**\n     * Give a handler to be called on 'declare key value' kind of metadata.\n     *\n     * @param handler - the handler to be used\n     */\n    metadata(handler: MetadataHandler): void;\n\n    /**\n     * Handle untyped MIDI messages.\n     *\n     * @param data - and arry of MIDI bytes\n     */\n    midiMessage(data: number[] | Uint8Array): void;\n\n    /**\n     * Handle MIDI ctrlChange messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param ctrl - the MIDI controller number (0..127)\n     * @param value - the MIDI controller value (0..127)\n     */\n    ctrlChange(chan: number, ctrl: number, value: number): void;\n\n    /**\n     * Handle MIDI pitchWheel messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param value - the MIDI controller value (0..16383)\n     */\n    pitchWheel(chan: number, value: number): void;\n\n    /**\n     * Set parameter value.\n     *\n     * @param path - the path to the wanted parameter (retrieved using 'getParams' method)\n     * @param val - the float value for the wanted control\n     */\n    setParamValue(path: string, value: number): void;\n\n    /**\n     * Get parameter value.\n     *\n     * @param path - the path to the wanted parameter (retrieved using 'getParams' method)\n     *\n     * @return the float value\n     */\n    getParamValue(path: string): number;\n\n    /**\n     * Get the table of all input parameters paths.\n     *\n     * @return the table of all input parameters paths\n     */\n    getParams(): string[];\n\n    /**\n     * Get DSP JSON description with its UI and metadata as object.\n     *\n     * @return the DSP JSON description as object\n     */\n    getMeta(): FaustDspMeta;\n\n    /**\n     * Get DSP JSON description with its UI and metadata.\n     *\n     * @return the DSP JSON description\n     */\n    getJSON(): string;\n\n    /**\n     * Get DSP UI description.\n     *\n     * @return the DSP UI description\n     */\n    getUI(): FaustUIDescriptor;\n\n    /**\n    * Get DSP UI items description.\n    *\n    * @return the DSP UI items description\n    */\n    getDescriptors(): FaustUIInputItem[];\n\n    /**\n     * Start the DSP.\n     */\n    start(): void;\n\n    /**\n     * Stop the DSP.\n     */\n    stop(): void;\n\n    /**\n     * Destroy the DSP.\n     */\n    destroy(): void;\n}\n\nexport interface IFaustMonoWebAudioDsp extends IFaustBaseWebAudioDsp {}\nexport interface IFaustMonoWebAudioNode extends IFaustMonoWebAudioDsp, AudioNode {}\n\nexport interface IFaustPolyWebAudioDsp extends IFaustBaseWebAudioDsp {\n    /**\n     * Handle MIDI keyOn messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param pitch - the MIDI pitch value (0..127)\n     * @param velocity - the MIDI velocity value (0..127)\n     */\n    keyOn(channel: number, pitch: number, velocity: number): void;\n\n    /**\n     * Handle MIDI keyOff messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param pitch - the MIDI pitch value (0..127)\n     * @param velocity - the MIDI velocity value (0..127)\n     */\n    keyOff(channel: number, pitch: number, velocity: number): void;\n\n    /**\n     * Stop all playing notes.\n     *\n     * @param hard - whether to immediately stop notes or put them in release mode\n     */\n    allNotesOff(hard: boolean): void;\n}\nexport interface IFaustPolyWebAudioNode extends IFaustPolyWebAudioDsp, AudioNode {}\n\nexport class FaustBaseWebAudioDsp implements IFaustBaseWebAudioDsp {\n    protected fOutputHandler: OutputParamHandler | null;\n    protected fComputeHandler: ComputeHandler | null;\n\n    // To handle MIDI events plot\n    protected fPlotHandler: PlotHandler | null;\n    protected fCachedEvents: { type: string; data: any }[];\n    protected fBufferNum: number;\n\n    protected fInChannels: Float32Array[] | Float64Array[];\n    protected fOutChannels: Float32Array[] | Float64Array[];\n\n    protected fOutputsTimer: number;\n\n    // UI items path\n    protected fInputsItems: string[];\n    protected fOutputsItems: string[];\n    protected fDescriptor: FaustUIInputItem[];\n\n    // Buffers in wasm memory\n    protected fAudioInputs!: number;\n    protected fAudioOutputs!: number;\n\n    protected fBufferSize: number;\n    protected gPtrSize: number;\n    protected gSampleSize: number;\n\n    // MIDI handling\n    protected fPitchwheelLabel: { path: string; min: number; max: number }[];\n    protected fCtrlLabel: { path: string; min: number; max: number }[][];\n    protected fPathTable: { [address: string]: number };\n    protected fUICallback: UIHandler;\n\n    protected fProcessing: boolean;\n\n    protected fDestroyed: boolean;\n\n    protected fJSONDsp!: FaustDspMeta;\n\n    constructor(sampleSize: number, bufferSize: number) {\n        this.fOutputHandler = null;\n        this.fComputeHandler = null;\n\n        // To handle MIDI events plot\n        this.fCachedEvents = [];\n        this.fBufferNum = 0;\n        this.fPlotHandler = null;\n\n        this.fBufferSize = bufferSize;\n\n        this.fInChannels = [];\n        this.fOutChannels = [];\n\n        this.gPtrSize = sampleSize; // Done on wast/wasm backend side\n        this.gSampleSize = sampleSize;\n\n        this.fOutputsTimer = 5;\n        this.fInputsItems = [];\n        this.fOutputsItems = [];\n        this.fDescriptor = [];\n\n        this.fPitchwheelLabel = [];\n        this.fCtrlLabel = new Array(128).fill(null).map(() => []);\n        this.fPathTable = {};\n\n        this.fProcessing = false;\n        this.fDestroyed = false;\n\n        this.fUICallback = (item: FaustUIItem) => {\n            if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n                // Keep bargraph adresses\n                this.fOutputsItems.push(item.address);\n                this.fPathTable[item.address] = item.index;\n            } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n                // Keep inputs adresses\n                this.fInputsItems.push(item.address);\n                this.fPathTable[item.address] = item.index;\n                this.fDescriptor.push(item);\n                // Parse 'midi' metadata\n                if (!item.meta) return;\n                item.meta.forEach((meta) => {\n                    const { midi } = meta;\n                    if (!midi) return;\n                    const strMidi = midi.trim();\n                    if (strMidi === \"pitchwheel\") {\n                        this.fPitchwheelLabel.push({ path: item.address, min: item.min as number, max: item.max as number });\n                    } else {\n                        const matched = strMidi.match(/^ctrl\\s(\\d+)/);\n                        if (!matched) return;\n                        this.fCtrlLabel[parseInt(matched[1])].push({ path: item.address, min: item.min as number, max: item.max as number });\n                    }\n                });\n            }\n        }\n    }\n\n    // Tools\n    static remap(v: number, mn0: number, mx0: number, mn1: number, mx1: number) {\n        return (v - mn0) / (mx0 - mn0) * (mx1 - mn1) + mn1;\n    }\n\n    // JSON parsing functions\n    static parseUI(ui: FaustUIDescriptor, callback: (...args: any[]) => any) {\n        ui.forEach(group => this.parseGroup(group, callback));\n    }\n\n    static parseGroup(group: FaustUIGroup, callback: (...args: any[]) => any) {\n        if (group.items) {\n            this.parseItems(group.items, callback);\n        }\n    }\n    static parseItems(items: FaustUIItem[], callback: (...args: any[]) => any) {\n        items.forEach(item => this.parseItem(item, callback));\n    }\n\n    static parseItem(item: FaustUIItem, callback: (...args: any[]) => any) {\n        if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n            this.parseItems(item.items, callback);\n        } else {\n            callback(item);\n        }\n    }\n\n    protected updateOutputs() {\n        if (this.fOutputsItems.length > 0 && this.fOutputHandler && this.fOutputsTimer-- === 0) {\n            this.fOutputsTimer = 5;\n            this.fOutputsItems.forEach(item => this.fOutputHandler?.(item, this.getParamValue(item)));\n        }\n    }\n\n    // Public API\n    metadata(handler: MetadataHandler) {\n        if (this.fJSONDsp.meta) {\n            this.fJSONDsp.meta.forEach(meta => handler(Object.keys(meta)[0], meta[Object.keys(meta)[0]]));\n        }\n    }\n\n    compute(input: Float32Array[], output: Float32Array[]) {\n        return false;\n    }\n\n    setOutputParamHandler(handler: OutputParamHandler | null) {\n        this.fOutputHandler = handler;\n    }\n    getOutputParamHandler() {\n        return this.fOutputHandler;\n    }\n\n    setComputeHandler(handler: ComputeHandler | null) {\n        this.fComputeHandler = handler;\n    }\n    getComputeHandler() {\n        return this.fComputeHandler;\n    }\n\n    setPlotHandler(handler: PlotHandler | null) {\n        this.fPlotHandler = handler;\n    }\n    getPlotHandler() {\n        return this.fPlotHandler;\n    }\n\n    getNumInputs() {\n        return -1;\n    }\n    getNumOutputs() {\n        return -1;\n    }\n\n    midiMessage(data: number[] | Uint8Array) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ data, type: \"midi\" });\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (cmd === 11) return this.ctrlChange(channel, data1, data2);\n        if (cmd === 14) return this.pitchWheel(channel, (data2 * 128.0 + data1));\n    }\n\n    ctrlChange(channel: number, ctrl: number, value: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"ctrlChange\", data: [channel, ctrl, value] });\n        if (this.fCtrlLabel[ctrl].length) {\n            this.fCtrlLabel[ctrl].forEach((ctrl) => {\n                const { path } = ctrl;\n                this.setParamValue(path, FaustBaseWebAudioDsp.remap(value, 0, 127, ctrl.min, ctrl.max));\n                // Typically used to reflect parameter change on GUI\n                if (this.fOutputHandler) this.fOutputHandler(path, this.getParamValue(path));\n            });\n        }\n    }\n\n    pitchWheel(channel: number, wheel: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"pitchWheel\", data: [channel, wheel] });\n        this.fPitchwheelLabel.forEach((pw) => {\n            this.setParamValue(pw.path, FaustBaseWebAudioDsp.remap(wheel, 0, 16383, pw.min, pw.max));\n            // Typically used to reflect parameter change on GUI\n            if (this.fOutputHandler) this.fOutputHandler(pw.path, this.getParamValue(pw.path));\n        });\n    }\n\n    setParamValue(path: string, value: number) { }\n    getParamValue(path: string) { return 0; }\n\n    getParams() { return this.fInputsItems; }\n    getMeta() { return this.fJSONDsp; }\n    getJSON() { return JSON.stringify(this.getMeta()); }\n    getUI() { return this.fJSONDsp.ui; }\n    getDescriptors() { return this.fDescriptor; }\n\n    start() {\n        this.fProcessing = true;\n    }\n\n    stop() {\n        this.fProcessing = false;\n    }\n\n    destroy() {\n        this.fDestroyed = true;\n        this.fOutputHandler = null;\n        this.fComputeHandler = null;\n        this.fPlotHandler = null;\n    }\n}\n\nexport class FaustMonoWebAudioDsp extends FaustBaseWebAudioDsp implements IFaustMonoWebAudioDsp {\n\n    private fInstance: FaustMonoDspInstance;\n    private fDSP!: number;\n\n    constructor(instance: FaustMonoDspInstance, sampleRate: number, sampleSize: number, bufferSize: number) {\n\n        super(sampleSize, bufferSize);\n        this.fInstance = instance;\n\n        // Create JSON object\n        this.fJSONDsp = JSON.parse(this.fInstance.json);\n\n        // Setup GUI\n        FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n\n        // Setup wasm memory\n        this.initMemory();\n\n        // Init DSP\n        this.fInstance.api.init(this.fDSP, sampleRate);\n    }\n\n    private initMemory() {\n\n        // Start of DSP memory: Mono DSP is placed first with index 0\n        this.fDSP = 0;\n\n        // Audio buffer start at the end of DSP\n        const $audio = this.fJSONDsp.size;\n\n        // Setup audio pointers offset\n        this.fAudioInputs = $audio;\n        this.fAudioOutputs = this.fAudioInputs + this.getNumInputs() * this.gPtrSize;\n\n        // Prepare wasm memory layout\n        const $audioInputs = this.fAudioOutputs + this.getNumOutputs() * this.gPtrSize;\n        const $audioOutputs = $audioInputs + this.getNumInputs() * this.fBufferSize * this.gSampleSize;\n\n        const HEAP = this.fInstance.memory.buffer;\n        const HEAP32 = new Int32Array(HEAP);\n        const HEAPF = (this.gSampleSize === 4) ? new Float32Array(HEAP) : new Float64Array(HEAP);\n\n        if (this.getNumInputs() > 0) {\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                HEAP32[(this.fAudioInputs >> 2) + chan] = $audioInputs + this.fBufferSize * this.gSampleSize * chan;\n            }\n            // Prepare Ins buffer tables\n            const dspInChans = HEAP32.subarray(this.fAudioInputs >> 2, (this.fAudioInputs + this.getNumInputs() * this.gPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                this.fInChannels[chan] = HEAPF.subarray(dspInChans[chan] >> Math.log2(this.gSampleSize), (dspInChans[chan] + this.fBufferSize * this.gSampleSize) >> Math.log2(this.gSampleSize));\n            }\n        }\n        if (this.getNumOutputs() > 0) {\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                HEAP32[(this.fAudioOutputs >> 2) + chan] = $audioOutputs + this.fBufferSize * this.gSampleSize * chan;\n            }\n            // Prepare Out buffer tables\n            const dspOutChans = HEAP32.subarray(this.fAudioOutputs >> 2, (this.fAudioOutputs + this.getNumOutputs() * this.gPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                this.fOutChannels[chan] = HEAPF.subarray(dspOutChans[chan] >> Math.log2(this.gSampleSize), (dspOutChans[chan] + this.fBufferSize * this.gSampleSize) >> Math.log2(this.gSampleSize));\n            }\n        }\n    }\n\n    toString() {\n        return `============== Mono Memory layout ==============\nthis.fBufferSize: ${this.fBufferSize}\nthis.fJSONDsp.size: ${this.fJSONDsp.size}\nthis.fAudioInputs: ${this.fAudioInputs}\nthis.fAudioOutputs: ${this.fAudioOutputs}\nthis.fDSP: ${this.fDSP}`;\n    }\n\n    // Public API\n    compute(input: Float32Array[], output: Float32Array[]) {\n\n        // Check DSP state\n        if (this.fDestroyed) return false;\n\n        // Check Processing state: the node returns 'true' to stay in the graph, even if not processing\n        if (!this.fProcessing) return true;\n\n        // Check inputs\n        if (this.getNumInputs() > 0 && (!input || !input[0] || input[0].length === 0)) {\n            // console.log(\"Process input error\");\n            return true;\n        }\n\n        // Check outputs\n        if (this.getNumOutputs() > 0 && (!output || !output[0] || output[0].length === 0)) {\n            // console.log(\"Process output error\");\n            return true;\n        }\n\n        // Copy inputs\n        if (input !== undefined) {\n            for (let chan = 0; chan < Math.min(this.getNumInputs(), input.length); ++chan) {\n                const dspInput = this.fInChannels[chan];\n                dspInput.set(input[chan]);\n            }\n        }\n\n        // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n        if (this.fComputeHandler) this.fComputeHandler(this.fBufferSize);\n\n        // Compute\n        this.fInstance.api.compute(this.fDSP, this.fBufferSize, this.fAudioInputs, this.fAudioOutputs);\n\n        // Update bargraph\n        this.updateOutputs();\n\n        if (output !== undefined) {\n            // Copy outputs\n            for (let chan = 0; chan < Math.min(this.getNumOutputs(), output.length); chan++) {\n                const dspOutput = this.fOutChannels[chan];\n                output[chan].set(dspOutput);\n            }\n            // PlotHandler handling\n            if (this.fPlotHandler) {\n                this.fPlotHandler(output, this.fBufferNum++, (this.fCachedEvents.length ? this.fCachedEvents : undefined));\n                this.fCachedEvents = [];\n            }\n        }\n\n        return true;\n    }\n\n    metadata(handler: MetadataHandler) { super.metadata(handler); }\n\n    getNumInputs() {\n        return this.fInstance.api.getNumInputs(this.fDSP);\n    }\n    getNumOutputs() {\n        return this.fInstance.api.getNumOutputs(this.fDSP);\n    }\n\n    setParamValue(path: string, value: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"param\", data: { path, value } });\n        this.fInstance.api.setParamValue(this.fDSP, this.fPathTable[path], value);\n    }\n    getParamValue(path: string) {\n        return this.fInstance.api.getParamValue(this.fDSP, this.fPathTable[path]);\n    }\n\n    getMeta() { return this.fJSONDsp; }\n    getJSON() { return this.fInstance.json; }\n    getDescriptors() { return this.fDescriptor; }\n    getUI() { return this.fJSONDsp.ui; }\n}\n\n\n// Voice management\ninterface TransformFunction { (val: number): number }\n\nexport class FaustWebAudioDspVoice {\n\n    static kActiveVoice: number;\n    static kFreeVoice: number;\n    static kReleaseVoice: number;\n    static kLegatoVoice: number;\n    static kNoVoice: number;\n    static VOICE_STOP_LEVEL: number;\n    private fFreqLabel: number[];\n    private fGateLabel: number[];\n    private fGainLabel: number[];\n    private fDSP: number;         // Voice DSP location in wasm memory\n    private fAPI: IFaustDspInstance; // Voice DSP code\n    private fKeyFun: TransformFunction;\n    private fVelFun: TransformFunction;\n    // Accessed by PolyDSPImp class\n    fCurNote: number;\n    // The timestamp at which the next note start/end should occur. If 0, then it should\n    // start immediately. If `undefined`, no note start/end is queued.\n    fNoteStartTimestamp: number | undefined;\n    fNoteEndTimestamp: number | undefined;\n    fNextNote: number;\n    fNextVel: number;\n    fDate: number;\n    fLevel: number;\n    fRelease: number;\n\n    constructor($dsp: number, api: IFaustDspInstance, inputItems: string[], pathTable: { [address: string]: number }, sampleRate: number) {\n        // Voice state\n        FaustWebAudioDspVoice.kActiveVoice = 0;\n        FaustWebAudioDspVoice.kFreeVoice = -1;\n        FaustWebAudioDspVoice.kReleaseVoice = -2;\n        FaustWebAudioDspVoice.kLegatoVoice = -3;\n        FaustWebAudioDspVoice.kNoVoice = -4;\n        FaustWebAudioDspVoice.VOICE_STOP_LEVEL = 0.0005;\n        // Default versions\n        this.fKeyFun = (pitch: number) => FaustWebAudioDspVoice.midiToFreq(pitch);\n        this.fVelFun = (velocity: number) => velocity / 127.0;\n        this.fCurNote = FaustWebAudioDspVoice.kFreeVoice;\n        this.fNoteStartTimestamp = undefined;\n        this.fNoteEndTimestamp = undefined;\n        this.fNextNote = this.fNextVel = -1;\n        this.fLevel = 0;\n        this.fDate = this.fRelease = 0;\n        this.fDSP = $dsp;\n        this.fAPI = api;\n        this.fGateLabel = [];\n        this.fGainLabel = [];\n        this.fFreqLabel = [];\n        this.fAPI.init(this.fDSP, sampleRate);\n        this.extractPaths(inputItems, pathTable);\n    }\n\n    static midiToFreq(note: number) { return 440.0 * 2 ** ((note - 69) / 12); }\n\n    private extractPaths(inputItems: string[], pathTable: { [address: string]: number }) {\n        inputItems.forEach((item) => {\n            if (item.endsWith(\"/gate\")) {\n                this.fGateLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/freq\")) {\n                this.fKeyFun = (pitch: number) => FaustWebAudioDspVoice.midiToFreq(pitch);\n                this.fFreqLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/key\")) {\n                this.fKeyFun = (pitch: number) => pitch;\n                this.fFreqLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/gain\")) {\n                this.fVelFun = (velocity: number) => velocity / 127.0;\n                this.fGainLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/vel\") && item.endsWith(\"/velocity\")) {\n                this.fVelFun = (velocity: number) => velocity;\n                this.fGainLabel.push(pathTable[item]);\n            }\n        });\n    }\n\n    // Public API\n\n    keyOn(pitch: number, velocity: number, legato: boolean = false, timestamp: number = 0) {\n        // console.log(timestamp);\n        this.fNoteStartTimestamp = timestamp;\n\n        if (legato) {\n            this.fNextNote = pitch;\n            this.fNextVel = velocity;\n        } else {\n            this.fFreqLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, this.fKeyFun(pitch)));\n            this.fGateLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, 1));\n            this.fGainLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, this.fVelFun(velocity)));\n            // Keep pitch\n            this.fCurNote = pitch;\n        }\n    }\n\n    keyOff(hard: boolean = false, timestamp: number = 0) {\n        this.fNoteEndTimestamp = timestamp;\n\n        this.fGateLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, 0));\n        if (hard) {\n            this.fCurNote = FaustWebAudioDspVoice.kFreeVoice;\n        } else {\n            this.fRelease = this.fAPI.getSampleRate(this.fDSP) / 2;\n            this.fCurNote = FaustWebAudioDspVoice.kReleaseVoice;\n        }\n    }\n\n    computeLegato(bufferSize: number, $inputs: number, $outputZero: number, $outputsHalf: number) {\n\n        let size = bufferSize / 2;\n\n        // Reset envelops\n        this.fGateLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, 0));\n\n        // Compute current voice on half buffer\n        this.fAPI.compute(this.fDSP, size, $inputs, $outputZero);\n\n        // Start next keyOn\n        this.keyOn(this.fNextNote, this.fNextVel);\n\n        // Compute on second half buffer\n        this.fAPI.compute(this.fDSP, size, $inputs, $outputsHalf);\n    }\n\n    compute(bufferSize: number, $inputs: number, $outputs: number) {\n        this.fAPI.compute(this.fDSP, bufferSize, $inputs, $outputs);\n    }\n\n    setParamValue(index: number, value: number) {\n        // console.log(3, index,value);\n        this.fAPI.setParamValue(this.fDSP, index, value);\n    }\n    getParamValue(index: number) {\n        return this.fAPI.getParamValue(this.fDSP, index);\n    }\n}\n\nexport class FaustPolyWebAudioDsp extends FaustBaseWebAudioDsp implements IFaustPolyWebAudioDsp {\n\n    private fInstance: FaustPolyDspInstance;\n    private fEffect!: number;\n    private fJSONEffect: FaustDspMeta | null;\n    private fAudioMixing!: number;\n    private fAudioMixingHalf!: number;\n    private fVoiceTable: FaustWebAudioDspVoice[];\n    private scheduledEvents: any[];\n    private originalMixingBufferPointers: number[];\n    private originalOutputBufferPointers: number[];\n\n    constructor(instance: FaustPolyDspInstance, sampleRate: number, sampleSize: number, bufferSize: number, private processor: any) {\n        super(sampleSize, bufferSize);\n        this.fInstance = instance;\n\n        // Create JSON for voice\n        this.fJSONDsp = JSON.parse(this.fInstance.voiceJSON);\n\n        // Create JSON for effect\n        this.fJSONEffect = (this.fInstance.effectAPI && this.fInstance.effectJSON) ? JSON.parse(this.fInstance.effectJSON) : null;\n\n        // Setup GUI\n        FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n        if (this.fJSONEffect) FaustBaseWebAudioDsp.parseUI(this.fJSONEffect.ui, this.fUICallback);\n\n        // Setup wasm memory\n        this.initMemory();\n\n        // Init DSP voices\n        this.fVoiceTable = [];\n        for (let voice = 0; voice < this.fInstance.voices; voice++) {\n            this.fVoiceTable.push(new FaustWebAudioDspVoice(\n                this.fJSONDsp.size * voice,\n                this.fInstance.voiceAPI,\n                this.fInputsItems,\n                this.fPathTable,\n                sampleRate));\n        }\n\n        // Init effect\n        if (this.fInstance.effectAPI) this.fInstance.effectAPI.init(this.fEffect, sampleRate);\n\n        this.scheduledEvents = [];\n    }\n\n    private initMemory() {\n\n        // Effect start at the end of all DSP voices\n        this.fEffect = this.fJSONDsp.size * this.fInstance.voices;\n\n        // Audio buffer start at the end of effect\n        const $audio = this.fEffect + (this.fJSONEffect ? this.fJSONEffect.size : 0);\n\n        // Setup audio pointers offset\n        this.fAudioInputs = $audio;\n        this.fAudioOutputs = this.fAudioInputs + this.getNumInputs() * this.gPtrSize;\n        this.fAudioMixing = this.fAudioOutputs + this.getNumOutputs() * this.gPtrSize;\n        this.fAudioMixingHalf = this.fAudioMixing + this.getNumOutputs() * this.gPtrSize;\n\n        // Prepare wasm memory layout\n        const $audioInputs = this.fAudioMixingHalf + this.getNumOutputs() * this.gPtrSize;\n        const $audioOutputs = $audioInputs + this.getNumInputs() * this.fBufferSize * this.gSampleSize;\n        const $audioMixing = $audioOutputs + this.getNumOutputs() * this.fBufferSize * this.gSampleSize;\n\n        const HEAP = this.fInstance.memory.buffer;\n        const HEAP32 = new Int32Array(HEAP);\n        const HEAPF = (this.gSampleSize === 4) ? new Float32Array(HEAP) : new Float64Array(HEAP);\n\n        if (this.getNumInputs() > 0) {\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                HEAP32[(this.fAudioInputs >> 2) + chan] = $audioInputs + this.fBufferSize * this.gSampleSize * chan;\n            }\n            // Prepare Ins buffer tables\n            const dspInChans = HEAP32.subarray(this.fAudioInputs >> 2, (this.fAudioInputs + this.getNumInputs() * this.gPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                this.fInChannels[chan] = HEAPF.subarray(dspInChans[chan] >> Math.log2(this.gSampleSize), (dspInChans[chan] + this.fBufferSize * this.gSampleSize) >> Math.log2(this.gSampleSize));\n            }\n        }\n\n        this.originalMixingBufferPointers = [];\n        this.originalOutputBufferPointers = [];\n\n        if (this.getNumOutputs() > 0) {\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                this.originalOutputBufferPointers[chan] = $audioOutputs + this.fBufferSize * this.gSampleSize * chan;\n                HEAP32[(this.fAudioOutputs >> 2) + chan] = this.originalOutputBufferPointers[chan];\n\n                this.originalMixingBufferPointers[chan] = $audioMixing + this.fBufferSize * this.gSampleSize * chan;\n                HEAP32[(this.fAudioMixing >> 2) + chan] = this.originalMixingBufferPointers[chan];\n\n                HEAP32[(this.fAudioMixingHalf >> 2) + chan] = $audioMixing + this.fBufferSize * this.gSampleSize * chan + this.fBufferSize / 2 * this.gSampleSize;\n\n            }\n            // Prepare Out buffer tables\n            const dspOutChans = HEAP32.subarray(this.fAudioOutputs >> 2, (this.fAudioOutputs + this.getNumOutputs() * this.gPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                this.fOutChannels[chan] = HEAPF.subarray(dspOutChans[chan] >> Math.log2(this.gSampleSize), (dspOutChans[chan] + this.fBufferSize * this.gSampleSize) >> Math.log2(this.gSampleSize));\n            }\n        }\n\n        // TD: we can manipulate like // HEAP32[(this.fAudioMixing >> 2)] += 496;\n    }\n\n    toString() {\n        return `============== Poly Memory layout ==============\nthis.fBufferSize: ${this.fBufferSize}\nthis.fJSONDsp.size: ${this.fJSONDsp.size}\nthis.fAudioInputs: ${this.fAudioInputs}\nthis.fAudioOutputs: ${this.fAudioOutputs}\nthis.fAudioMixing: ${this.fAudioMixing}\nthis.fAudioMixingHalf: ${this.fAudioMixingHalf}`;\n    }\n\n    private allocVoice(voice: number, type: number) {\n        this.fVoiceTable[voice].fDate++;\n        this.fVoiceTable[voice].fCurNote = type;\n        return voice;\n    }\n\n    private getPlayingVoice(pitch: number) {\n        let voicePlaying = FaustWebAudioDspVoice.kNoVoice;\n        let oldestDatePlaying = Number.MAX_VALUE;\n\n        for (let voice = 0; voice < this.fInstance.voices; voice++) {\n            if (this.fVoiceTable[voice].fCurNote === pitch) {\n                // Keeps oldest playing voice\n                if (this.fVoiceTable[voice].fDate < oldestDatePlaying) {\n                    oldestDatePlaying = this.fVoiceTable[voice].fDate;\n                    voicePlaying = voice;\n                }\n            }\n        }\n        return voicePlaying;\n    }\n\n    private getFreeVoice() {\n        for (let voice = 0; voice < this.fInstance.voices; voice++) {\n            if (this.fVoiceTable[voice].fCurNote === FaustWebAudioDspVoice.kFreeVoice) {\n                return this.allocVoice(voice, FaustWebAudioDspVoice.kActiveVoice);\n            }\n        }\n\n        let voiceRelease = FaustWebAudioDspVoice.kNoVoice;\n        let voicePlaying = FaustWebAudioDspVoice.kNoVoice;\n        let oldestDateRelease = Number.MAX_VALUE;\n        let oldestDatePlaying = Number.MAX_VALUE;\n\n        for (let voice = 0; voice < this.fInstance.voices; voice++) { // Scan all voices\n            // Try to steal a voice in DspVoice.kReleaseVoice mode...\n            if (this.fVoiceTable[voice].fCurNote === FaustWebAudioDspVoice.kReleaseVoice) {\n                // Keeps oldest release voice\n                if (this.fVoiceTable[voice].fDate < oldestDateRelease) {\n                    oldestDateRelease = this.fVoiceTable[voice].fDate;\n                    voiceRelease = voice;\n                }\n            } else if (this.fVoiceTable[voice].fDate < oldestDatePlaying) {\n                oldestDatePlaying = this.fVoiceTable[voice].fDate;\n                voicePlaying = voice;\n            }\n        }\n        // Then decide which one to steal\n        if (oldestDateRelease !== Number.MAX_VALUE) {\n            console.log(`Steal release voice : voice_date = ${this.fVoiceTable[voiceRelease].fDate} voice = ${voiceRelease}`);\n            return this.allocVoice(voiceRelease, FaustWebAudioDspVoice.kLegatoVoice);\n        }\n        if (oldestDatePlaying !== Number.MAX_VALUE) {\n            console.log(`Steal playing voice : voice_date = ${this.fVoiceTable[voicePlaying].fDate} voice = ${voicePlaying}`);\n            return this.allocVoice(voicePlaying, FaustWebAudioDspVoice.kLegatoVoice);\n        }\n        return FaustWebAudioDspVoice.kNoVoice;\n    }\n\n    // Public API\n    compute(input: Float32Array[], output: Float32Array[]) {\n        const HEAP = this.fInstance.memory.buffer;\n        const HEAP32 = new Int32Array(HEAP);\n\n        // Check DSP state\n        if (this.fDestroyed) return false;\n\n        // Check Processing state: the node returns 'true' to stay in the graph, even if not processing\n        if (!this.fProcessing) return true;\n\n        // Check inputs\n        if (this.getNumInputs() > 0 && (!input || !input[0] || input[0].length === 0)) {\n            // console.log(\"Process input error\");\n            return true;\n        }\n\n        // Check outputs\n        if (this.getNumOutputs() > 0 && (!output || !output[0] || output[0].length === 0)) {\n            // console.log(\"Process output error\");\n            return true;\n        }\n\n        // Copy inputs\n        if (input !== undefined) {\n            for (let chan = 0; chan < Math.min(this.getNumInputs(), input.length); ++chan) {\n                const dspInput = this.fInChannels[chan];\n                dspInput.set(input[chan]);\n            }\n        }\n\n        // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n        if (this.fComputeHandler) this.fComputeHandler(this.fBufferSize);\n\n        // Compute\n        this.fInstance.mixerAPI.clearOutput(this.fBufferSize, this.getNumOutputs(), this.fAudioOutputs);\n\n        const events = [...this.getEventsInCurrentFrame(), null];\n        if (events.length) {\n            // console.log(events, this.processor.getCurrentTime());\n        }\n        // const sliceBoundaries = [...events.map(e => e.sampleOffset), this.fBufferSize];\n        // const sliceBoundaries = [this.fBufferSize];\n        // console.log(sliceBoundaries)\n\n        // console.log('----')\n        for (let eventIndex = 0; eventIndex < events.length; eventIndex++) {\n            const event = events[eventIndex];\n\n            const sliceStart = eventIndex > 0 ? events[eventIndex - 1].sampleOffset : 0;\n            const sliceEnd = event === null ? this.fBufferSize : event.sampleOffset;\n            const sliceLength = sliceEnd - sliceStart;\n\n            // Offset the buffer pointers for this slice\n            if (sliceStart > 0) {\n                // console.log({sliceStart,sliceEnd,sliceLength})\n                for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                    HEAP32[(this.fAudioOutputs >> 2) + chan] = this.originalOutputBufferPointers[chan] + (sliceStart * this.gSampleSize);\n                    HEAP32[(this.fAudioMixing >> 2) + chan] = this.originalMixingBufferPointers[chan] + (sliceStart * this.gSampleSize);\n                }\n            }\n\n            if (event && event.sampleOffset <0) {\n                console.log(\"negative event\",event);\n            }\n\n            if (event && event.type === \"NOTE_ON\") {\n                this.keyOn(0, event.data.note, 1);\n            } else if (event && event.type === \"NOTE_OFF\") {\n                this.keyOff(0, event.data.note, 1);\n            } else if (event && event.type === \"PARAMETER_CHANGE\") {\n                this.setParamValue(event.data.path, event.data.value);\n            }\n\n            this.fVoiceTable.forEach((voice) => {\n                /*if (voice.fCurNote === FaustWebAudioDspVoice.kLegatoVoice) {\n                    // Play from current note and next note\n                    voice.computeLegato(this.fBufferSize, this.fAudioInputs, this.fAudioMixing, this.fAudioMixingHalf);\n                    // FadeOut on first half buffer\n                    this.fInstance.mixerAPI.fadeOut(this.fBufferSize / 2, this.getNumOutputs(), this.fAudioMixing);\n                    // Mix it in result\n                    voice.fLevel = this.fInstance.mixerAPI.mixCheckVoice(this.fBufferSize, this.getNumOutputs(), this.fAudioMixing, this.fAudioOutputs);\n                } else*/ if (voice.fCurNote !== FaustWebAudioDspVoice.kFreeVoice) {\n                    // If the note is waiting to start, and the onset occurs within this buffer\n                    /*if (voice.fNoteStartTimestamp !== undefined) {\n                        const endOfCurrentFrameSecs = this.processor.getCurrentTime() + (this.fBufferSize / this.processor.getSampleRate());\n\n                        if (endOfCurrentFrameSecs > voice.fNoteStartTimestamp) {\n                            const samplesUntilStart = (voice.fNoteStartTimestamp * this.processor.getSampleRate()) - (this.processor.getCurrentFrame());\n                            console.log(endOfCurrentFrameSecs, voice.fNoteStartTimestamp, this.processor.getCurrentTime(), this.processor.getCurrentFrame());\n                            console.log('start in ', samplesUntilStart);\n                            voice.fNoteStartTimestamp = undefined;\n                        }\n                    }*/\n\n                    // Compute current note\n                    voice.compute(sliceLength, this.fAudioInputs, this.fAudioMixing);\n\n                    // Mix it in result\n                    voice.fLevel = this.fInstance.mixerAPI.mixCheckVoice(sliceLength, this.getNumOutputs(), this.fAudioMixing, this.fAudioOutputs);\n                    // Check the level to possibly set the voice in kFreeVoice again\n                    voice.fRelease -= sliceLength;\n                    if ((voice.fCurNote == FaustWebAudioDspVoice.kReleaseVoice) && ((voice.fLevel < FaustWebAudioDspVoice.VOICE_STOP_LEVEL) && (voice.fRelease < 0))) {\n                        voice.fCurNote = FaustWebAudioDspVoice.kFreeVoice;\n                    }\n                }\n            });\n        }\n\n        if (this.fInstance.effectAPI) this.fInstance.effectAPI.compute(this.fEffect, this.fBufferSize, this.fAudioOutputs, this.fAudioOutputs);\n\n        // Reset the buffer pointers\n        for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n            HEAP32[(this.fAudioOutputs >> 2) + chan] = this.originalOutputBufferPointers[chan];\n            HEAP32[(this.fAudioMixing >> 2) + chan] = this.originalMixingBufferPointers[chan];\n        }\n\n        // Update bargraph\n        this.updateOutputs();\n\n        if (output !== undefined) {\n            // Copy outputs\n            for (let chan = 0; chan < Math.min(this.getNumOutputs(), output.length); chan++) {\n                const dspOutput = this.fOutChannels[chan];\n                output[chan].set(dspOutput);\n            }\n\n            // PlotHandler handling\n            if (this.fPlotHandler) {\n                this.fPlotHandler(output, this.fBufferNum++, (this.fCachedEvents.length ? this.fCachedEvents : undefined));\n                this.fCachedEvents = [];\n            }\n        }\n\n        return true;\n    }\n    getNumInputs() {\n        return this.fInstance.voiceAPI.getNumInputs(0);\n    }\n    getNumOutputs() {\n        return this.fInstance.voiceAPI.getNumOutputs(0);\n    }\n\n    getEventsInCurrentFrame() {\n        const events: any[] = [];\n        const currentTime = this.processor.getCurrentTime();\n        const sampleRate = this.processor.getSampleRate();\n        const endOfCurrentFrameSecs = currentTime + (this.fBufferSize / sampleRate);\n\n        // console.log('----loop----');\n        // let i;\n        // for (i = 0; i < this.scheduledEvents.length; i++) {\n        while(this.scheduledEvents.length && this.scheduledEvents[0].time < endOfCurrentFrameSecs) {\n            const event = this.scheduledEvents[0];\n            // if (event.time < endOfCurrentFrameSecs) {\n                // console.log(\"dequeue event\", event, {currentTime, endOfCurrentFrameSecs})\n                const enrichedEvent = this.scheduledEvents.shift();\n                enrichedEvent.sampleOffset = Math.round((event.time - currentTime) * sampleRate);\n                events.push(enrichedEvent);\n                // continue;\n            // } else {\n            //     console.log('break on ', event);\n            //     break;\n            // }\n        }\n\n        // for (let j = 0; j < i; j++) {\n        //     this.scheduledEvents.unshift();\n        // }\n\n        return events;\n    }\n\n    private static findPath(o: any, p: string) {\n        if (typeof o !== \"object\") {\n            return false;\n        } else if (o.address) {\n            return (o.address === p);\n        } else {\n            for (const k in o) {\n                if (FaustPolyWebAudioDsp.findPath(o[k], p)) return true;\n            }\n            return false;\n        }\n    }\n\n    setParamValue(path: string, value: number) {\n        // console.log(2,path,value);//,new Error().stack)\n\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"param\", data: { path, value } });\n        if (this.fJSONEffect && FaustPolyWebAudioDsp.findPath(this.fJSONEffect.ui, path) && this.fInstance.effectAPI) {\n            this.fInstance.effectAPI.setParamValue(this.fEffect, this.fPathTable[path], value);\n        } else {\n            this.fVoiceTable.forEach(voice => voice.setParamValue(this.fPathTable[path], value));\n        }\n    }\n    getParamValue(path: string) {\n        if (this.fJSONEffect && FaustPolyWebAudioDsp.findPath(this.fJSONEffect.ui, path) && this.fInstance.effectAPI) {\n            return this.fInstance.effectAPI.getParamValue(this.fEffect, this.fPathTable[path]);\n        } else {\n            return this.fVoiceTable[0].getParamValue(this.fPathTable[path]);\n        }\n    }\n\n    getMeta() {\n        const o = this.fJSONDsp;\n        const e = this.fJSONEffect;\n        const r = { ...o };\n        if (e) {\n            r.ui = [{\n                type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ]\n            }];\n        } else {\n            r.ui = [{\n                type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ]\n            }];\n        }\n        return r as FaustDspMeta;\n    }\n\n    getJSON() {\n        return JSON.stringify(this.getMeta());\n    }\n\n    getUI() {\n        return this.getMeta().ui;\n    }\n\n    getDescriptors() { return this.fDescriptor; }\n\n    midiMessage(data: number[] | Uint8Array, timestamp: number = 0) {\n        console.log(\"PLY MIDI\")\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (cmd === 8 || (cmd === 9 && data2 === 0)) return this.keyOff(channel, data1, data2, timestamp);\n        else if (cmd === 9) return this.keyOn(channel, data1, data2, timestamp);\n        else super.midiMessage(data);\n    };\n\n    ctrlChange(channel: number, ctrl: number, value: number) {\n        if (ctrl === 123 || ctrl === 120) {\n            this.allNotesOff(true);\n        } else {\n            super.ctrlChange(channel, ctrl, value);\n        }\n    }\n\n    keyOn(channel: number, pitch: number, velocity: number, timestamp: number = 0) {\n        // console.log(\"KEY ON\", timestamp);\n        const voice = this.getFreeVoice();\n        this.fVoiceTable[voice].keyOn(pitch, velocity, this.fVoiceTable[voice].fCurNote == FaustWebAudioDspVoice.kLegatoVoice, timestamp);\n    }\n\n    keyOff(channel: number, pitch: number, velocity: number, timestamp: number = 0) {\n        const voice = this.getPlayingVoice(pitch);\n        if (voice !== FaustWebAudioDspVoice.kNoVoice) {\n            this.fVoiceTable[voice].keyOff(false, timestamp);\n        } else {\n            console.log(\"Playing pitch = %d not found\\n\", pitch);\n        }\n    }\n\n    scheduleEvent(event: any) {\n        console.log('scheudling event', event);\n        event.id = this.scheduledEvents.length;\n        this.scheduledEvents.push(event);\n        this.scheduledEvents.sort((a, b) => a.time - b.time);\n        // console.log('scheudling event', event, JSON.stringify(this.scheduledEvents));\n    }\n\n    allNotesOff(hard: boolean = true) {\n        this.fCachedEvents.push({ type: \"ctrlChange\", data: [0, 123, 0] });\n        this.fVoiceTable.forEach(voice => voice.keyOff(hard));\n    }\n}\n", "import { OutputParamHandler, ComputeHandler, PlotHandler, UIHandler, MetadataHandler, FaustBaseWebAudioDsp, IFaustMonoWebAudioDsp, IFaustPolyWebAudioDsp } from \"./FaustWebAudioDsp\";\nimport type { FaustAudioWorkletNodeOptions } from \"./FaustAudioWorkletProcessor\";\nimport type { LooseFaustDspFactory, FaustDspMeta, FaustUIInputItem, FaustUIItem } from \"./types\";\n\n/**\n * Base class for Monophonic and Polyphonic AudioWorkletNode\n */\nexport class FaustAudioWorkletNode<Poly extends boolean = false> extends (globalThis.AudioWorkletNode || null) {\n\n    protected fJSONDsp: FaustDspMeta;\n    protected fJSON: string;\n    protected fInputsItems: string[];\n    protected fOutputHandler: OutputParamHandler | null;\n    protected fComputeHandler: ComputeHandler | null;\n    protected fPlotHandler: PlotHandler | null;\n    protected fUICallback: UIHandler;\n    protected fDescriptor: FaustUIInputItem[];\n\n    constructor(context: BaseAudioContext, name: string, factory: LooseFaustDspFactory, options: FaustAudioWorkletNodeOptions<Poly>[\"processorOptions\"]) {\n\n        // Create JSON object\n        const JSONObj: FaustDspMeta = JSON.parse(factory.json);\n\n        // Create proxy FaustAudioWorkletProcessor\n        super(context, name, {\n            numberOfInputs: JSONObj.inputs > 0 ? 1 : 0,\n            numberOfOutputs: JSONObj.outputs > 0 ? 1 : 0,\n            channelCount: Math.max(1, JSONObj.inputs),\n            outputChannelCount: [JSONObj.outputs],\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"speakers\",\n            processorOptions: options\n        });\n\n        this.fJSONDsp = JSONObj;\n        this.fJSON = factory.json;\n        this.fOutputHandler = null;\n        this.fComputeHandler = null;\n        this.fPlotHandler = null;\n        this.fDescriptor = [];\n\n        // Parse UI\n        this.fInputsItems = [];\n        this.fUICallback = (item: FaustUIItem) => {\n            if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n                // Keep inputs adresses\n                this.fInputsItems.push(item.address);\n                this.fDescriptor.push(item);\n            }\n        }\n        FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n\n        // Patch it with additional functions\n        this.port.onmessage = (e: MessageEvent) => {\n            if (e.data.type === \"param\" && this.fOutputHandler) {\n                this.fOutputHandler(e.data.path, e.data.value);\n            } else if (e.data.type === \"plot\" && this.fPlotHandler) {\n                this.fPlotHandler(e.data.value, e.data.index, e.data.events);\n            }\n        };\n    }\n\n    // Public API\n    setOutputParamHandler(handler: OutputParamHandler | null) {\n        this.fOutputHandler = handler;\n    }\n    getOutputParamHandler() {\n        return this.fOutputHandler;\n    }\n\n    setComputeHandler(handler: ComputeHandler | null) {\n        this.fComputeHandler = handler;\n    }\n    getComputeHandler(): ComputeHandler | null {\n        return this.fComputeHandler;\n    }\n\n    setPlotHandler(handler: PlotHandler | null) {\n        this.fPlotHandler = handler;\n        // Set PlotHandler on processor side\n        if (this.fPlotHandler) {\n            this.port.postMessage({ type: \"setPlotHandler\", data: true });\n        } else {\n            this.port.postMessage({ type: \"setPlotHandler\", data: false });\n        }\n    }\n    getPlotHandler(): PlotHandler | null {\n        return this.fPlotHandler;\n    }\n\n    getNumInputs() {\n        return this.fJSONDsp.inputs;\n    }\n    getNumOutputs() {\n        return this.fJSONDsp.outputs;\n    }\n\n    // Implemented in subclasses\n    compute(inputs: Float32Array[], outputs: Float32Array[]) {\n        return false;\n    }\n\n    metadata(handler: MetadataHandler) {\n        if (this.fJSONDsp.meta) {\n            this.fJSONDsp.meta.forEach(meta => handler(Object.keys(meta)[0], meta[Object.keys(meta)[0]]));\n        }\n    }\n\n    midiMessage(data: number[] | Uint8Array, timestamp: number = 0): void {\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (cmd === 11) this.ctrlChange(channel, data1, data2);\n        else if (cmd === 14) this.pitchWheel(channel, data2 * 128.0 + data1);\n        else this.port.postMessage({ type: \"midi\", data: data, timestamp: timestamp });\n    }\n\n    ctrlChange(channel: number, ctrl: number, value: number) {\n        const e = { type: \"ctrlChange\", data: [channel, ctrl, value] };\n        this.port.postMessage(e);\n    }\n    pitchWheel(channel: number, wheel: number) {\n        const e = { type: \"pitchWheel\", data: [channel, wheel] };\n        this.port.postMessage(e);\n    }\n\n    setParamValue(path: string, value: number) {\n        const e = { type: \"param\", data: { path, value } };\n        this.port.postMessage(e);\n        // Set value on AudioParam (but this is not used on Processor side for now)\n        const param = this.parameters.get(path);\n        if (param) param.setValueAtTime(value, this.context.currentTime);\n\n    }\n    getParamValue(path: string) {\n        // Get value of AudioParam\n        const param = this.parameters.get(path);\n        return (param) ? param.value : 0;\n    }\n\n    getParams() { return this.fInputsItems; }\n    getMeta() { return this.fJSONDsp; }\n    getJSON() { return JSON.stringify(this.getMeta()); }\n    getUI() { return this.fJSONDsp.ui; }\n    getDescriptors() { return this.fDescriptor; }\n\n    start() {\n        this.port.postMessage({ type: \"start\" });\n    }\n\n    stop() {\n        this.port.postMessage({ type: \"stop\" });\n    }\n\n    destroy() {\n        this.port.postMessage({ type: \"destroy\" });\n        this.port.close();\n    }\n}\n\n/**\n * Monophonic AudioWorkletNode\n */\nexport class FaustMonoAudioWorkletNode extends FaustAudioWorkletNode<false> implements IFaustMonoWebAudioDsp {\n\n    onprocessorerror = (e: Event) => {\n        console.error(\"Error from \" + this.fJSONDsp.name + \" FaustMonoAudioWorkletNode\");\n        throw e;\n    }\n\n    constructor(context: BaseAudioContext, name: string, factory: LooseFaustDspFactory, sampleSize: number) {\n        super(context, name, factory, { name, factory, sampleSize });\n    }\n}\n\n/**\n * Polyphonic AudioWorkletNode\n */\nexport class FaustPolyAudioWorkletNode extends FaustAudioWorkletNode<true> implements IFaustPolyWebAudioDsp {\n\n    private fJSONEffect: FaustDspMeta | null;\n\n    onprocessorerror = (e: Event) => {\n        console.error(\"Error from \" + this.fJSONDsp.name + \" FaustPolyAudioWorkletNode\");\n        throw e;\n    }\n\n    constructor(context: BaseAudioContext,\n        name: string,\n        voiceFactory: LooseFaustDspFactory,\n        mixerModule: WebAssembly.Module,\n        voices: number,\n        sampleSize: number,\n        effectFactory?: LooseFaustDspFactory) {\n\n        super(context, name, voiceFactory,\n            {\n                name,\n                voiceFactory,\n                mixerModule,\n                voices,\n                sampleSize,\n                effectFactory\n            });\n\n        this.fJSONEffect = effectFactory ? JSON.parse(effectFactory.json) : null;\n\n        if (this.fJSONEffect) {\n            FaustBaseWebAudioDsp.parseUI(this.fJSONEffect.ui, this.fUICallback);\n        }\n    }\n\n    scheduleEvent(event: any) {\n        console.log(\"HELLO\");\n        this.port.postMessage({ type: \"scheduledEvent\", data: event });\n    }\n\n    // Public API\n    keyOn(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOn\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n\n    keyOff(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOff\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n\n    allNotesOff(hard: boolean) {\n        const e = { type: \"ctrlChange\", data: [0, 123, 0] };\n        this.port.postMessage(e);\n    }\n\n    getMeta() {\n        const o = this.fJSONDsp;\n        const e = this.fJSONEffect;\n        const r = { ...o };\n        if (e) {\n            r.ui = [{\n                type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ]\n            }];\n        } else {\n            r.ui = [{\n                type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ]\n            }];\n        }\n        return r as FaustDspMeta;\n    }\n\n    getJSON() {\n        return JSON.stringify(this.getMeta());\n    }\n\n    getUI() {\n        return this.getMeta().ui;\n    }\n}\n", "import type { ComputeHandler, FaustMonoWebAudioDsp, FaustPolyWebAudioDsp, IFaustMonoWebAudioDsp, IFaustPolyWebAudioDsp, MetadataHandler, OutputParamHandler, PlotHandler } from \"./FaustWebAudioDsp\";\n\n/**\n * Base class for Monophonic and Polyphonic ScriptProcessorNode\n */\nexport class FaustScriptProcessorNode<Poly extends boolean = false> extends (globalThis.ScriptProcessorNode || null) {\n    protected fDSPCode!: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp;\n\n    // Needed for ScriptProcessorNode\n    protected fInputs!: Float32Array[];\n    protected fOutputs!: Float32Array[];\n\n    init(instance: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp) {\n        this.fDSPCode = instance;\n\n        this.fInputs = new Array(this.fDSPCode.getNumInputs());\n        this.fOutputs = new Array(this.fDSPCode.getNumOutputs());\n\n        this.onaudioprocess = (e) => {\n\n            // Read inputs\n            for (let chan = 0; chan < this.fDSPCode.getNumInputs(); chan++) {\n                this.fInputs[chan] = e.inputBuffer.getChannelData(chan);\n            }\n\n            // Read outputs\n            for (let chan = 0; chan < this.fDSPCode.getNumOutputs(); chan++) {\n                this.fOutputs[chan] = e.outputBuffer.getChannelData(chan);\n            }\n\n            return this.fDSPCode.compute(this.fInputs, this.fOutputs);\n        }\n\n        this.start();\n    }\n    // Public API\n    compute(input: Float32Array[], output: Float32Array[]) { return this.fDSPCode.compute(input, output); }\n\n    setOutputParamHandler(handler: OutputParamHandler) { this.fDSPCode.setOutputParamHandler(handler); }\n    getOutputParamHandler() { return this.fDSPCode.getOutputParamHandler(); }\n\n    setComputeHandler(handler: ComputeHandler) { this.fDSPCode.setComputeHandler(handler); }\n    getComputeHandler() { return this.fDSPCode.getComputeHandler(); }\n\n    setPlotHandler(handler: PlotHandler) { this.fDSPCode.setPlotHandler(handler); }\n    getPlotHandler() { return this.fDSPCode.getPlotHandler(); }\n\n    getNumInputs() { return this.fDSPCode.getNumInputs(); }\n    getNumOutputs() { return this.fDSPCode.getNumOutputs(); }\n\n    metadata(handler: MetadataHandler) { }\n\n    midiMessage(data: number[] | Uint8Array) { this.fDSPCode.midiMessage(data); }\n\n    ctrlChange(chan: number, ctrl: number, value: number) { this.fDSPCode.ctrlChange(chan, ctrl, value); }\n    pitchWheel(chan: number, value: number) { this.fDSPCode.pitchWheel(chan, value); }\n\n    setParamValue(path: string, value: number) { this.fDSPCode.setParamValue(path, value); }\n    getParamValue(path: string) { return this.fDSPCode.getParamValue(path); }\n    getParams() { return this.fDSPCode.getParams(); }\n\n    getMeta() { return this.fDSPCode.getMeta(); }\n    getJSON() { return this.fDSPCode.getJSON(); }\n    getDescriptors() { return this.fDSPCode.getDescriptors(); }\n    getUI() { return this.fDSPCode.getUI(); }\n\n    start() { this.fDSPCode.start(); }\n    stop() { this.fDSPCode.stop(); }\n\n    destroy() { this.fDSPCode.destroy(); }\n}\n\nexport class FaustMonoScriptProcessorNode extends FaustScriptProcessorNode<false> implements IFaustMonoWebAudioDsp {\n}\n\nexport class FaustPolyScriptProcessorNode extends FaustScriptProcessorNode<true> implements IFaustPolyWebAudioDsp {\n    keyOn(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOn(channel, pitch, velocity); }\n    keyOff(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOff(channel, pitch, velocity); }\n    allNotesOff(hard: boolean) { this.fDSPCode.allNotesOff(hard); }\n}\n", "import { FaustMonoAudioWorkletNode, FaustPolyAudioWorkletNode } from \"./FaustAudioWorkletNode\";\nimport getFaustAudioWorkletProcessor, { FaustData } from \"./FaustAudioWorkletProcessor\";\nimport FaustDspInstance from \"./FaustDspInstance\";\nimport FaustWasmInstantiator from \"./FaustWasmInstantiator\";\nimport FaustOfflineProcessor, { IFaustOfflineProcessor } from \"./FaustOfflineProcessor\";\nimport { FaustMonoScriptProcessorNode, FaustPolyScriptProcessorNode } from \"./FaustScriptProcessorNode\";\nimport { FaustBaseWebAudioDsp, FaustMonoWebAudioDsp, FaustPolyWebAudioDsp, FaustWebAudioDspVoice, IFaustMonoWebAudioNode, IFaustPolyWebAudioNode } from \"./FaustWebAudioDsp\";\nimport type { IFaustCompiler } from \"./FaustCompiler\";\nimport type { FaustDspFactory, FaustDspMeta, LooseFaustDspFactory } from \"./types\";\n\nexport interface IFaustMonoDspGenerator {\n    /**\n     * Compile a monophonic DSP factory from given code.\n     *\n     * @param compiler - the Faust compiler\n     * @param name - the DSP name\n     * @param code - the DSP code\n     * @param args - the compilation parameters\n     * @returns the compiled factory or 'null' if failure\n     */\n    compile(compiler: IFaustCompiler, name: string, code: string, args: string): Promise<{\n        factory: FaustDspFactory | null;\n        name?: string;\n        meta?: FaustDspMeta;\n    } | null>;\n\n    /**\n     * Create a monophonic WebAudio node (either ScriptProcessorNode or AudioWorkletNode).\n     *\n     * @param context - the WebAudio context\n     * @param name - AudioWorklet Processor name\n     * @param factory - default is the compiled factory\n     * @param sp - whether to compile a ScriptProcessorNode or an AudioWorkletNode\n     * @param bufferSize - the buffer size in frames to be used in ScriptProcessorNode only, since AudioWorkletNode always uses 128 frames\n     * @returns the compiled WebAudio node or 'null' if failure\n    */\n    createNode(\n        context: BaseAudioContext,\n        name?: string,\n        factory?: LooseFaustDspFactory,\n        sp?: boolean,\n        bufferSize?: number\n    ): Promise<IFaustMonoWebAudioNode | null>;\n\n    /**\n    * Create a monophonic Offline processor.\n    *\n    * @param sampleRate - the sample rate in Hz\n    * @param bufferSize - the buffer size in frames\n    * @param factory - default is the compiled factory\n    * @returns the compiled processor or 'null' if failure\n    */\n    createOfflineProcessor(sampleRate: number, bufferSize: number, factory?: LooseFaustDspFactory, meta?: FaustDspMeta): Promise<IFaustOfflineProcessor | null>;\n}\n\nexport interface IFaustPolyDspGenerator {\n    /**\n     * Compile a monophonic DSP factory from given code.\n     *\n     * @param compiler - the Faust compiler\n     * @param name - the DSP name\n     * @param dspCode - the DSP code ('dsp_code' can possibly contain an integrated effect)\n     * @param args - the compilation parameters\n     * @param effectCode - optional effect DSP code\n     * @returns the compiled factory or 'null' if failure\n     */\n    compile(compiler: IFaustCompiler, name: string, dspCode: string, args: string, effectCode?: string): Promise<{\n        voiceFactory: FaustDspFactory | null;\n        effectFactory?: FaustDspFactory | null;\n    } | null>;\n    /**\n     * Create a polyphonic WebAudio node (either ScriptProcessorNode or AudioWorkletNode).\n     *\n     * @param context the WebAudio context\n     * @param voices - the number of voices\n     * @param name - AudioWorklet Processor name\n     * @param voiceFactory - the Faust factory for voices, either obtained with a compiler (createDSPFactory) or loaded from files (loadDSPFactory)\n     * @param mixerModule - the wasm Mixer module (loaded from 'mixer32.wasm' or 'mixer64.wasm' files)\n     * @param effectFactory - the Faust factory for the effect, either obtained with a compiler (createDSPFactory) or loaded from files (loadDSPFactory)\n     * @param sp - whether to compile a ScriptProcessorNode or an AudioWorkletNode\n     * @param bufferSize - the buffer size in frames to be used in ScriptProcessorNode only, since AudioWorkletNode always uses 128 frames\n     * @returns the compiled WebAudio node or 'null' if failure\n     */\n    createNode(\n        context: BaseAudioContext,\n        voices: number,\n        name?: string,\n        voiceFactory?: LooseFaustDspFactory,\n        mixerModule?: WebAssembly.Module,\n        effectFactory?: LooseFaustDspFactory | null,\n        sp?: boolean,\n        bufferSize?: number\n    ): Promise<IFaustPolyWebAudioNode | null>;\n\n}\n\nexport class FaustMonoDspGenerator implements IFaustMonoDspGenerator {\n    // Set of all created WorkletProcessors, each of them has to be unique\n    private static gWorkletProcessors: Set<string> = new Set();\n\n    name: string;\n    factory!: FaustDspFactory | null;\n\n    constructor() {\n        this.factory = null;\n    }\n    async compile(compiler: IFaustCompiler, name: string, code: string, args: string) {\n        this.factory = await compiler.createMonoDSPFactory(name, code, args);\n        if (!this.factory) return null;\n        this.name = name + this.factory.cfactory.toString();\n        return this;\n    }\n\n    async createNode<SP extends boolean = false>(\n        context: BaseAudioContext,\n        name = this.name,\n        factory = this.factory as LooseFaustDspFactory,\n        sp = false as SP,\n        bufferSize = 1024\n    ): Promise<SP extends true ? FaustMonoScriptProcessorNode | null : FaustMonoAudioWorkletNode | null> {\n        if (!factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const meta = JSON.parse(factory.json);\n        const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n        if (sp) {\n            const instance = await FaustWasmInstantiator.createAsyncMonoDSPInstance(factory);\n            const monoDsp = new FaustMonoWebAudioDsp(instance, context.sampleRate, sampleSize, bufferSize);\n            const sp = context.createScriptProcessor(bufferSize, monoDsp.getNumInputs(), monoDsp.getNumOutputs()) as FaustMonoScriptProcessorNode;\n            Object.setPrototypeOf(sp, FaustMonoScriptProcessorNode.prototype);\n            sp.init(monoDsp);\n            return sp as SP extends true ? FaustMonoScriptProcessorNode : FaustMonoAudioWorkletNode;\n        } else {\n            // Dynamically create AudioWorkletProcessor if code not yet created\n            if (!FaustMonoDspGenerator.gWorkletProcessors.has(name)) {\n                try {\n                    const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n    dspName: name,\n    dspMeta: meta,\n    poly: false\n} as FaustData)};\n// Implementation needed classes of functions\nconst ${FaustDspInstance.name}_default = ${FaustDspInstance.toString()}\nconst ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nconst ${FaustMonoWebAudioDsp.name} = ${FaustMonoWebAudioDsp.toString()}\nconst ${FaustWasmInstantiator.name} = ${FaustWasmInstantiator.toString()}\n// Put them in dependencies\nconst dependencies = {\n    ${FaustBaseWebAudioDsp.name},\n    ${FaustMonoWebAudioDsp.name},\n    ${FaustWasmInstantiator.name}\n};\n// Generate the actual AudioWorkletProcessor code\n(${getFaustAudioWorkletProcessor.toString()})(dependencies, faustData);\n`;\n                    const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n                    await context.audioWorklet.addModule(url);\n                    // Keep the DSP name\n                    FaustMonoDspGenerator.gWorkletProcessors.add(name);\n                } catch (e) {\n                    console.error(`=> exception raised while running createMonoNode: ${e}`);\n                    console.error(`=> check that your page is served using https.${e}`);\n                    return null;\n                }\n            }\n            // Create the AWN\n            const node = new FaustMonoAudioWorkletNode(context, name, factory, sampleSize)\n            return node as SP extends true ? FaustMonoScriptProcessorNode : FaustMonoAudioWorkletNode;\n        }\n    }\n    async createOfflineProcessor(\n        sampleRate: number,\n        bufferSize: number,\n        factory = this.factory as LooseFaustDspFactory,\n    ): Promise<IFaustOfflineProcessor | null> {\n        if (!factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const meta = JSON.parse(factory.json);\n        const instance = await FaustWasmInstantiator.createAsyncMonoDSPInstance(factory);\n        const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n        const monoDsp = new FaustMonoWebAudioDsp(instance, sampleRate, sampleSize, bufferSize);\n        return new FaustOfflineProcessor(monoDsp, bufferSize);\n    }\n}\n\nexport class FaustPolyDspGenerator implements IFaustPolyDspGenerator {\n    // Set of all created WorkletProcessors, each of them has to be unique\n    private static gWorkletProcessors: Set<string> = new Set();\n\n    name: string;\n    voiceFactory!: FaustDspFactory | null;\n    effectFactory!: FaustDspFactory | null;\n    mixerBuffer!: Uint8Array;\n    mixerModule!: WebAssembly.Module;\n\n    constructor() {\n        this.voiceFactory = null;\n        this.effectFactory = null;\n    }\n    async compile(\n        compiler: IFaustCompiler,\n        name: string,\n        dspCode: string,\n        args: string,\n        effectCode = `\nadapt(1,1) = _; adapt(2,2) = _,_; adapt(1,2) = _ <: _,_; adapt(2,1) = _,_ :> _;\nadaptor(F,G) = adapt(outputs(F),inputs(G));\ndsp_code = environment{${dspCode}};\nprocess = adaptor(dsp_code.process, dsp_code.effect) : dsp_code.effect;`\n    ) {\n        this.voiceFactory = await compiler.createPolyDSPFactory(name, dspCode, args);\n        if (!this.voiceFactory) return null;\n        // Compile effect, possibly failing since 'compilePolyNode2' can be called by called by 'compilePolyNode'\n        this.effectFactory = await compiler.createPolyDSPFactory(name, effectCode, args);\n        this.name = name + this.voiceFactory.cfactory.toString() + \"_poly\";\n        const voiceMeta = JSON.parse(this.voiceFactory.json);\n        const isDouble = voiceMeta.compile_options.match(\"-double\");\n        const { mixerBuffer, mixerModule } = await compiler.getAsyncInternalMixerModule(!!isDouble);\n        this.mixerBuffer = mixerBuffer;\n        this.mixerModule = mixerModule;\n        return this;\n    }\n\n    async createNode<SP extends boolean = false>(\n        context: BaseAudioContext,\n        voices: number,\n        name = this.name,\n        voiceFactory = this.voiceFactory as LooseFaustDspFactory,\n        mixerModule = this.mixerModule,\n        effectFactory = this.effectFactory as LooseFaustDspFactory | null,\n        sp = false as SP,\n        bufferSize = 1024\n    ): Promise<SP extends true ? FaustPolyScriptProcessorNode | null : FaustPolyAudioWorkletNode | null> {\n        if (!voiceFactory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const voiceMeta = JSON.parse(voiceFactory.json);\n        const effectMeta = effectFactory ? JSON.parse(effectFactory.json) : undefined;\n        const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n        if (sp) {\n            const instance = await FaustWasmInstantiator.createAsyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory || undefined);\n            const polyDsp = new FaustPolyWebAudioDsp(instance, context.sampleRate, sampleSize, bufferSize, {} as any);\n            const sp = context.createScriptProcessor(bufferSize, polyDsp.getNumInputs(), polyDsp.getNumOutputs()) as FaustPolyScriptProcessorNode;\n            Object.setPrototypeOf(sp, FaustPolyScriptProcessorNode.prototype);\n            sp.init(polyDsp);\n            return sp as SP extends true ? FaustPolyScriptProcessorNode : FaustPolyAudioWorkletNode;\n        } else {\n            // Dynamically create AudioWorkletProcessor if code not yet created\n            if (!FaustPolyDspGenerator.gWorkletProcessors.has(name)) {\n                try {\n                    const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n    dspName: name,\n    dspMeta: voiceMeta,\n    poly: true,\n    effectMeta\n} as FaustData)};\n// Implementation needed classes of functions\nconst ${FaustDspInstance.name}_default = ${FaustDspInstance.toString()}\nconst ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nconst ${FaustPolyWebAudioDsp.name} = ${FaustPolyWebAudioDsp.toString()}\nconst ${FaustWebAudioDspVoice.name} = ${FaustWebAudioDspVoice.toString()}\nconst ${FaustWasmInstantiator.name} = ${FaustWasmInstantiator.toString()}\n// Put them in dependencies\nconst dependencies = {\n    ${FaustBaseWebAudioDsp.name},\n    ${FaustPolyWebAudioDsp.name},\n    ${FaustWasmInstantiator.name}\n};\n// Generate the actual AudioWorkletProcessor code\n(${getFaustAudioWorkletProcessor.toString()})(dependencies, faustData);\n`;\n                    const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n                    await context.audioWorklet.addModule(url);\n                    // Keep the DSP name\n                    FaustPolyDspGenerator.gWorkletProcessors.add(name);\n                } catch (e) {\n                    console.error(`=> exception raised while running createMonoNode: ${e}`);\n                    console.error(`=> check that your page is served using https.${e}`);\n                    return null;\n                }\n            }\n            // Create the AWN\n            const node = new FaustPolyAudioWorkletNode(context, name, voiceFactory, mixerModule, voices, sampleSize, effectFactory || undefined);\n            return node as SP extends true ? FaustPolyScriptProcessorNode : FaustPolyAudioWorkletNode;\n        }\n    }\n}\n", "import instantiateFaustModule from \"./instantiateFaustModule\";\nimport getFaustAudioWorkletProcessor from \"./FaustAudioWorkletProcessor\";\nimport FaustCompiler from \"./FaustCompiler\";\nimport FaustDspInstance from \"./FaustDspInstance\";\nimport FaustWasmInstantiator from \"./FaustWasmInstantiator\";\nimport FaustOfflineProcessor from \"./FaustOfflineProcessor\";\nimport FaustSvgDiagrams from \"./FaustSvgDiagrams\";\nimport LibFaust from \"./LibFaust\";\nimport WavEncoder from \"./WavEncoder\";\nimport WavDecoder from \"./WavDecoder\";\n\nexport * from \"./FaustAudioWorkletNode\";\nexport * from \"./FaustAudioWorkletProcessor\";\nexport * from \"./FaustCompiler\";\nexport * from \"./FaustDspInstance\";\nexport * from \"./FaustOfflineProcessor\";\nexport * from \"./FaustScriptProcessorNode\";\nexport * from \"./FaustWebAudioDsp\";\nexport * from \"./FaustDspGenerator\";\nexport * from \"./LibFaust\";\n\nexport * from \"./types\";\n\nexport {\n    instantiateFaustModule,\n    getFaustAudioWorkletProcessor,\n    FaustDspInstance,\n    FaustCompiler,\n    FaustWasmInstantiator,\n    FaustOfflineProcessor,\n    FaustSvgDiagrams,\n    LibFaust,\n    WavEncoder,\n    WavDecoder,\n};\n\nexport default {\n    instantiateFaustModule,\n    getFaustAudioWorkletProcessor,\n    FaustDspInstance,\n    FaustCompiler,\n    FaustWasmInstantiator,\n    FaustOfflineProcessor,\n    FaustSvgDiagrams,\n    LibFaust,\n    WavEncoder,\n    WavDecoder,\n};\n"],
  "mappings": "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",
  "names": []
}
